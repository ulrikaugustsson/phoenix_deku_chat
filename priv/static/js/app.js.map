{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","node_modules/deku/lib/application.js","node_modules/deku/lib/events.js","node_modules/deku/lib/index.js","node_modules/deku/lib/node-type.js","node_modules/deku/lib/render.js","node_modules/deku/lib/stringify.js","node_modules/deku/lib/svg.js","node_modules/deku/node_modules/component-emitter/index.js","node_modules/deku/node_modules/component-raf/index.js","node_modules/deku/node_modules/component-type/index.js","node_modules/deku/node_modules/fast.js/array/forEach.js","node_modules/deku/node_modules/fast.js/array/reduce.js","node_modules/deku/node_modules/fast.js/forEach.js","node_modules/deku/node_modules/fast.js/function/bindInternal3.js","node_modules/deku/node_modules/fast.js/function/bindInternal4.js","node_modules/deku/node_modules/fast.js/object/assign.js","node_modules/deku/node_modules/fast.js/object/forEach.js","node_modules/deku/node_modules/fast.js/object/reduce.js","node_modules/deku/node_modules/fast.js/reduce.js","node_modules/deku/node_modules/get-uid/index.js","node_modules/deku/node_modules/is-dom/index.js","node_modules/deku/node_modules/is-svg-attribute/index.js","node_modules/deku/node_modules/is-svg-element/index.js","node_modules/deku/node_modules/object-defaults/index.js","node_modules/deku/node_modules/object-path/index.js","node_modules/virtual-element/index.js","node_modules/virtual-element/node_modules/array-flatten/array-flatten.js","node_modules/virtual-element/node_modules/sliced/index.js","node_modules/virtual-element/node_modules/sliced/lib/sliced.js","web/static/js/app.js","web/static/js/messages/index.js","web/static/vendor/phoenix.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7wzjKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjthEA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;+BC/BiC,sBAAsB;;8BACnC,iBAAiB;;;;oBACV,MAAM;;wBACZ,YAAY;;;;AAEjC,IAAM,YAAY,GAAG,EAAE,CAAC;;AAExB,IAAM,GAAG,GAAG,gBAAK,0DAAU,QAAQ,EAAE,EAAE,AAAC,GAAG,CAAC,CAAC;AAC7C,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;;AAElC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;;AAEjB,kBAAO,GAAG,EAAE,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;;AAEjD,IAAI,MAAM,GAAG,4BAAW,SAAS,EAAE;AAClC,OAAM,EAAG,gBAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAK;AAAE,SAAO,CAAC,GAAG,CAAI,IAAI,UAAK,GAAG,EAAI,IAAI,CAAC,CAAA;EAAE,AAAC;CACvE,CAAC,CAAA;;AAEF,MAAM,CAAC,OAAO,CAAC,EAAC,OAAO,EAAE,KAAK,EAAC,CAAC,CAAA;AAChC,IAAI,OAAO,GAAM,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,CAAA;AAClD,IAAI,MAAM,GAAO,QAAQ,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAA;AACzD,IAAI,SAAS,GAAI,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAC,CAAA;;AAEpD,MAAM,CAAC,MAAM,CAAE,UAAA,EAAE;QAAI,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC;CAAA,CAAE,CAAA;AAC9C,MAAM,CAAC,OAAO,CAAE,UAAA,EAAE;QAAI,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE,CAAC;CAAA,CAAE,CAAA;AAChD,MAAM,CAAC,OAAO,CAAE,UAAA,CAAC;QAAI,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;CAAA,CAAC,CAAA;;AAE7C,IAAI,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAAA;AAC5C,IAAI,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,QAAQ,EAAE;QAAM,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;CAAA,CAAC,CACvD,OAAO,CAAC,IAAI,EAAE;QAAM,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;CAAA,CAAC,CAC3C,KAAK,CAAC,KAAK,EAAE;QAAM,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC;CAAA,CAAC,CAAA;AACjE,IAAI,CAAC,OAAO,CAAC,UAAA,CAAC;QAAI,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,CAAC,CAAC;CAAA,CAAC,CAAA;AACzD,IAAI,CAAC,OAAO,CAAC,UAAA,CAAC;QAAI,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC,CAAC;CAAA,CAAC,CAAA;;AAEnD,MAAM,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;AACvC,MAAM,CAAC,gBAAgB,CAAC,UAAU,EAAE,UAAA,CAAC,EAAI;AACxC,KAAI,CAAC,CAAC,OAAO,IAAI,EAAE,EAAE;AACpB,MAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAC,IAAI,EAAE,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,CAAC,KAAK,EAAC,CAAC,CAAA;AACjE,QAAM,CAAC,KAAK,GAAG,EAAE,CAAC;EAClB;CACD,CAAC,CAAA;;AAEF,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,UAAA,GAAG,EAAI;AACzB,aAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACvB,IAAG,CAAC,GAAG,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;CAClC,CAAC,CAAA;;AAEF,IAAI,CAAC,EAAE,CAAC,cAAc,EAAE,UAAA,GAAG,EAAI;AAC9B,IAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,IAAI,WAAW,CAAC;AACnC,aAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACvB,IAAG,CAAC,GAAG,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;CAClC,CAAC,CAAA;;;;;;;;;;;;8BCpDkB,iBAAiB;;;;AAErC,IAAM,SAAS,GAAG;AACjB,UAAS,EAAE;AACV,UAAQ,EAAE;AACT,SAAM,EAAE,UAAU;GAClB;EACD;;AAED,OAAM,EAAA,gBAAC,IAAO,EAAE;MAAR,KAAK,GAAN,IAAO,CAAN,KAAK;MACL,QAAQ,GAAc,KAAK,CAA3B,QAAQ;MAAE,QAAQ,GAAI,KAAK,CAAjB,QAAQ;;AACzB,MAAM,eAAe,GAAG,QAAQ,CAAC,GAAG,CAAC,UAAC,OAAO,EAAK;AACjD,UAAQ;;;;IAAI;;OAAG,IAAI,EAAC,GAAG;;KAAG,OAAO,CAAC,IAAI;KAAK;;IAAI,OAAO,CAAC,IAAI;IAAK,CAAE;GAClE,CAAC,CAAC;;AAEH,SAAO;;KAAK,KAAK,EAAC,+BAA+B;GAAE,eAAe;GAAO,CAAC;EAC1E;;AAED,YAAW,EAAC,qBAAC,SAAS,EAAE,EAAE,EAAE;AAC3B,IAAE,CAAC,SAAS,GAAG,EAAE,CAAC,YAAY,CAAC;EAC/B;CACD,CAAC;;qBAEa,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC+DxB,IAAM,aAAa,GAAG,EAAC,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAC,CAAA;AACrE,IAAM,cAAc,GAAG;AACrB,QAAM,EAAE,QAAQ;AAChB,SAAO,EAAE,SAAS;AAClB,QAAM,EAAE,QAAQ;AAChB,SAAO,EAAE,SAAS;CACnB,CAAA;AACD,IAAM,cAAc,GAAG;AACrB,OAAK,EAAE,WAAW;AAClB,OAAK,EAAE,WAAW;AAClB,MAAI,EAAE,UAAU;AAChB,OAAK,EAAE,WAAW;AAClB,OAAK,EAAE,WAAW;CACnB,CAAA;AACD,IAAM,UAAU,GAAG;AACjB,UAAQ,EAAE,UAAU;AACpB,WAAS,EAAE,WAAW;CACvB,CAAA;;IAEK,IAAI;;;;;;;;;AAQG,WARP,IAAI,CAQI,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC;0BARhC,IAAI;;AASN,QAAI,CAAC,OAAO,GAAQ,OAAO,CAAA;AAC3B,QAAI,CAAC,KAAK,GAAU,KAAK,CAAA;AACzB,QAAI,CAAC,OAAO,GAAQ,OAAO,IAAI,EAAE,CAAA;AACjC,QAAI,CAAC,YAAY,GAAG,IAAI,CAAA;AACxB,QAAI,CAAC,SAAS,GAAM,IAAI,CAAA;AACxB,QAAI,CAAC,QAAQ,GAAO,EAAE,CAAA;AACtB,QAAI,CAAC,IAAI,GAAW,KAAK,CAAA;GAC1B;;eAhBG,IAAI;;WAkBJ,gBAAE;;;AACJ,UAAM,GAAG,GAAW,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,CAAA;AACjD,UAAI,CAAC,QAAQ,GAAO,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,CAAC,CAAA;AACpD,UAAI,CAAC,YAAY,GAAG,IAAI,CAAA;AACxB,UAAI,CAAC,IAAI,GAAW,KAAK,CAAA;;AAEzB,UAAI,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAA,OAAO,EAAI;AACxC,cAAK,YAAY,GAAG,OAAO,CAAA;AAC3B,cAAK,YAAY,CAAC,OAAO,CAAC,CAAA;AAC1B,cAAK,cAAc,EAAE,CAAA;AACrB,cAAK,WAAW,EAAE,CAAA;OACnB,CAAC,CAAA;;AAEF,UAAI,CAAC,UAAU,EAAE,CAAA;AACjB,UAAI,CAAC,IAAI,GAAG,IAAI,CAAA;AAChB,UAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC;AACvB,aAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK;AACzB,aAAK,EAAE,IAAI,CAAC,KAAK;AACjB,eAAO,EAAE,IAAI,CAAC,OAAO;AACrB,WAAG,EAAE,GAAG;OACT,CAAC,CAAA;KACH;;;WAEM,iBAAC,MAAM,EAAE,QAAQ,EAAC;AACvB,UAAG,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,MAAM,EAAC;AAC1D,gBAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAA;OACrC;;AAED,UAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,MAAM,EAAN,MAAM,EAAE,QAAQ,EAAR,QAAQ,EAAC,CAAC,CAAA;AACtC,aAAO,IAAI,CAAA;KACZ;;;WAEI,eAAC,EAAE,EAAE,QAAQ,EAAC;AACjB,UAAG,IAAI,CAAC,SAAS,EAAC;AAAE,kEAA0D;OAAE;AAChF,UAAI,KAAK,GAAG,IAAI,CAAA;AAChB,UAAG,IAAI,CAAC,IAAI,EAAC;AAAE,aAAK,GAAG,UAAU,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAA;OAAE;AACjD,UAAI,CAAC,SAAS,GAAG,EAAC,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAC,CAAA;AAC3D,aAAO,IAAI,CAAA;KACZ;;;;;;WAKW,sBAAC,IAAuB,EAAC;UAAvB,MAAM,GAAP,IAAuB,CAAtB,MAAM;UAAE,QAAQ,GAAjB,IAAuB,CAAd,QAAQ;UAAE,GAAG,GAAtB,IAAuB,CAAJ,GAAG;;AACjC,UAAI,CAAC,QAAQ,CAAC,MAAM,CAAE,UAAA,CAAC;eAAI,CAAC,CAAC,MAAM,KAAK,MAAM;OAAA,CAAE,CAClC,OAAO,CAAE,UAAA,CAAC;eAAI,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC;OAAA,CAAE,CAAA;KACnD;;;WAEa,0BAAE;AAAE,UAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;KAAE;;;WAExC,uBAAE;AAAE,UAAG,CAAC,IAAI,CAAC,SAAS,EAAC;AAAE,eAAM;OAAE;AAC1C,kBAAY,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAA;AAClC,UAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAA;KAC5B;;;WAES,sBAAE;;;AAAE,UAAG,CAAC,IAAI,CAAC,SAAS,EAAC;AAAE,eAAM;OAAE;AACzC,UAAI,QAAQ,GAAG,SAAX,QAAQ,GAAS;AACnB,eAAK,cAAc,EAAE,CAAA;AACrB,eAAK,SAAS,CAAC,QAAQ,EAAE,CAAA;OAC1B,CAAA;AACD,UAAI,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAA;KAC/D;;;SA/EG,IAAI;;;IAkFG,OAAO;AACP,WADA,OAAO,CACN,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE;;;0BADxB,OAAO;;AAEhB,QAAI,CAAC,KAAK,GAAS,cAAc,CAAC,MAAM,CAAA;AACxC,QAAI,CAAC,KAAK,GAAS,KAAK,CAAA;AACxB,QAAI,CAAC,MAAM,GAAQ,MAAM,IAAI,EAAE,CAAA;AAC/B,QAAI,CAAC,MAAM,GAAQ,MAAM,CAAA;AACzB,QAAI,CAAC,QAAQ,GAAM,EAAE,CAAA;AACrB,QAAI,CAAC,UAAU,GAAI,KAAK,CAAA;AACxB,QAAI,CAAC,QAAQ,GAAM,IAAI,IAAI,CAAC,IAAI,EAAE,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;AACnE,QAAI,CAAC,UAAU,GAAI,EAAE,CAAA;AACrB,QAAI,CAAC,WAAW,GAAI,IAAI,KAAK,CAC3B;aAAM,OAAK,oBAAoB,EAAE;KAAA,EACjC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAC7B,CAAA;AACD,QAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,YAAM;AAChC,aAAK,KAAK,GAAG,cAAc,CAAC,MAAM,CAAA;AAClC,aAAK,WAAW,CAAC,KAAK,EAAE,CAAA;KACzB,CAAC,CAAA;AACF,QAAI,CAAC,OAAO,CAAE,YAAM;AAClB,aAAK,MAAM,CAAC,GAAG,CAAC,SAAS,aAAW,OAAK,KAAK,CAAG,CAAA;AACjD,aAAK,KAAK,GAAG,cAAc,CAAC,MAAM,CAAA;AAClC,aAAK,MAAM,CAAC,MAAM,QAAM,CAAA;KACzB,CAAC,CAAA;AACF,QAAI,CAAC,OAAO,CAAE,UAAA,MAAM,EAAI;AACtB,aAAK,MAAM,CAAC,GAAG,CAAC,SAAS,aAAW,OAAK,KAAK,EAAI,MAAM,CAAC,CAAA;AACzD,aAAK,KAAK,GAAG,cAAc,CAAC,OAAO,CAAA;AACnC,aAAK,WAAW,CAAC,UAAU,EAAE,CAAA;KAC9B,CAAC,CAAA;AACF,QAAI,CAAC,EAAE,CAAC,cAAc,CAAC,KAAK,EAAE,UAAC,OAAO,EAAE,GAAG,EAAK;AAC9C,aAAK,OAAO,CAAC,OAAK,cAAc,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,CAAA;KAChD,CAAC,CAAA;GACH;;eA/BU,OAAO;;WAiCE,gCAAE;AACpB,UAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAA;AAC7B,UAAG,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,EAAC;AAC3B,YAAI,CAAC,MAAM,EAAE,CAAA;OACd;KACF;;;WAEG,gBAAE;AACJ,UAAG,IAAI,CAAC,UAAU,EAAC;AACjB,2GAAmG;OACpG,MAAM;AACL,YAAI,CAAC,UAAU,GAAG,IAAI,CAAA;OACvB;AACD,UAAI,CAAC,QAAQ,EAAE,CAAA;AACf,aAAO,IAAI,CAAC,QAAQ,CAAA;KACrB;;;WAEM,iBAAC,QAAQ,EAAC;AAAE,UAAI,CAAC,EAAE,CAAC,cAAc,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;KAAE;;;WAErD,iBAAC,QAAQ,EAAC;AACf,UAAI,CAAC,EAAE,CAAC,cAAc,CAAC,KAAK,EAAE,UAAA,MAAM;eAAI,QAAQ,CAAC,MAAM,CAAC;OAAA,CAAE,CAAA;KAC3D;;;WAEC,YAAC,KAAK,EAAE,QAAQ,EAAC;AAAE,UAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,KAAK,EAAL,KAAK,EAAE,QAAQ,EAAR,QAAQ,EAAC,CAAC,CAAA;KAAE;;;WAEzD,aAAC,KAAK,EAAC;AAAE,UAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAE,UAAA,IAAI;eAAI,IAAI,CAAC,KAAK,KAAK,KAAK;OAAA,CAAE,CAAA;KAAE;;;WAE3E,mBAAE;AAAE,aAAO,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,KAAK,KAAK,cAAc,CAAC,MAAM,CAAA;KAAE;;;WAEjF,cAAC,KAAK,EAAE,OAAO,EAAC;AAClB,UAAG,CAAC,IAAI,CAAC,UAAU,EAAC;AAClB,kCAAwB,KAAK,cAAS,IAAI,CAAC,KAAK,gEAA6D;OAC9G;AACD,UAAI,SAAS,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;AAC9C,UAAG,IAAI,CAAC,OAAO,EAAE,EAAC;AAChB,iBAAS,CAAC,IAAI,EAAE,CAAA;OACjB,MAAM;AACL,YAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;OAChC;;AAED,aAAO,SAAS,CAAA;KACjB;;;;;;;;;;;;;;;;WAcI,iBAAE;;;AACL,aAAO,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,YAAM;AACzD,eAAK,MAAM,CAAC,GAAG,CAAC,SAAS,aAAW,OAAK,KAAK,CAAG,CAAA;AACjD,eAAK,OAAO,CAAC,cAAc,CAAC,KAAK,EAAE,OAAO,CAAC,CAAA;OAC5C,CAAC,CAAA;KACH;;;;;;;WAKQ,mBAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAC,EAAE;;;;;;WAIxB,kBAAC,KAAK,EAAC;AAAE,aAAO,IAAI,CAAC,KAAK,KAAK,KAAK,CAAA;KAAE;;;WAEtC,oBAAE;AACR,UAAI,CAAC,KAAK,GAAG,cAAc,CAAC,OAAO,CAAA;AACnC,UAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAA;KACrB;;;WAEK,kBAAE;AACN,UAAI,CAAC,QAAQ,EAAE,CAAA;AACf,UAAI,CAAC,UAAU,CAAC,OAAO,CAAE,UAAA,SAAS;eAAI,SAAS,CAAC,IAAI,EAAE;OAAA,CAAE,CAAA;AACxD,UAAI,CAAC,UAAU,GAAG,EAAE,CAAA;KACrB;;;WAEM,iBAAC,YAAY,EAAE,OAAO,EAAE,GAAG,EAAC;AACjC,UAAI,CAAC,SAAS,CAAC,YAAY,EAAE,OAAO,EAAE,GAAG,CAAC,CAAA;AAC1C,UAAI,CAAC,QAAQ,CAAC,MAAM,CAAE,UAAA,IAAI;eAAI,IAAI,CAAC,KAAK,KAAK,YAAY;OAAA,CAAE,CAC7C,GAAG,CAAE,UAAA,IAAI;eAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,CAAC;OAAA,CAAE,CAAA;KACzD;;;WAEa,wBAAC,GAAG,EAAC;AAAE,6BAAqB,GAAG,CAAE;KAAE;;;SAzHtC,OAAO;;;;;IA4HP,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BN,WA1BA,MAAM,CA0BL,QAAQ,EAAY;;;QAAV,IAAI,yDAAG,EAAE;;0BA1BpB,MAAM;;AA2Bf,QAAI,CAAC,oBAAoB,GAAG,EAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAC,CAAA;AACzE,QAAI,CAAC,QAAQ,GAAe,EAAE,CAAA;AAC9B,QAAI,CAAC,UAAU,GAAa,EAAE,CAAA;AAC9B,QAAI,CAAC,GAAG,GAAoB,CAAC,CAAA;AAC7B,QAAI,CAAC,SAAS,GAAc,IAAI,CAAC,SAAS,IAAI,MAAM,CAAC,SAAS,IAAI,QAAQ,CAAA;AAC1E,QAAI,CAAC,mBAAmB,GAAI,IAAI,CAAC,mBAAmB,IAAI,KAAK,CAAA;AAC7D,QAAI,CAAC,gBAAgB,GAAO,IAAI,CAAC,gBAAgB,IAAI,UAAS,KAAK,EAAC;AAClE,aAAO,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,KAAK,CAAA;KAC/C,CAAA;AACD,QAAI,CAAC,MAAM,GAAiB,IAAI,CAAC,MAAM,IAAI,YAAU,EAAE,CAAA;AACvD,QAAI,CAAC,iBAAiB,GAAM,IAAI,CAAC,iBAAiB,IAAI,KAAK,CAAA;AAC3D,QAAI,CAAC,MAAM,GAAiB,EAAE,CAAA;AAC9B,QAAI,CAAC,cAAc,GAAS,IAAI,KAAK,CAAC;aAAM,OAAK,OAAO,CAAC,OAAK,MAAM,CAAC;KAAA,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAA;AAC7F,QAAI,CAAC,QAAQ,GAAkB,QAAQ,SAAI,UAAU,CAAC,SAAS,AAAE,CAAA;GAClE;;eAzCU,MAAM;;WA2CT,oBAAE;AAAE,aAAO,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,KAAK,GAAG,IAAI,CAAA;KAAE;;;WAE1D,uBAAE;AACX,UAAI,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;AACvD,UAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAC;AAAE,eAAO,GAAG,CAAA;OAAE;AACvC,UAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAC;AAAE,eAAU,IAAI,CAAC,QAAQ,EAAE,SAAI,GAAG,CAAE;OAAE;;AAE/D,aAAU,IAAI,CAAC,QAAQ,EAAE,WAAM,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAE;KACrD;;;WAES,oBAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAC;AAChC,UAAG,IAAI,CAAC,IAAI,EAAC;AACX,YAAI,CAAC,IAAI,CAAC,OAAO,GAAG,YAAU,EAAE,CAAA;AAChC,YAAG,IAAI,EAAC;AAAE,cAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,IAAI,EAAE,CAAC,CAAA;SAAE,MAAM;AAAE,cAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAA;SAAE;AAC1E,YAAI,CAAC,IAAI,GAAG,IAAI,CAAA;OACjB;AACD,cAAQ,IAAI,QAAQ,EAAE,CAAA;KACvB;;;;;WAGM,mBAAa;;;UAAZ,MAAM,yDAAG,EAAE;AAAG,UAAI,CAAC,MAAM,GAAG,MAAM,CAAA;AACxC,UAAI,CAAC,UAAU,CAAC,YAAM;AACpB,eAAK,IAAI,GAAG,IAAI,OAAK,SAAS,CAAC,OAAK,WAAW,EAAE,CAAC,CAAA;AAClD,eAAK,IAAI,CAAC,OAAO,GAAK,OAAK,iBAAiB,CAAA;AAC5C,eAAK,IAAI,CAAC,MAAM,GAAM;iBAAM,OAAK,UAAU,EAAE;SAAA,CAAA;AAC7C,eAAK,IAAI,CAAC,OAAO,GAAK,UAAA,KAAK;iBAAI,OAAK,WAAW,CAAC,KAAK,CAAC;SAAA,CAAA;AACtD,eAAK,IAAI,CAAC,SAAS,GAAG,UAAA,KAAK;iBAAI,OAAK,aAAa,CAAC,KAAK,CAAC;SAAA,CAAA;AACxD,eAAK,IAAI,CAAC,OAAO,GAAK,UAAA,KAAK;iBAAI,OAAK,WAAW,CAAC,KAAK,CAAC;SAAA,CAAA;OACvD,CAAC,CAAA;KACH;;;;;WAGE,aAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAC;AAAE,UAAI,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,CAAA;KAAE;;;;;;;;;;WAQzC,gBAAC,QAAQ,EAAC;AAAE,UAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;KAAE;;;WAC3D,iBAAC,QAAQ,EAAC;AAAE,UAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;KAAE;;;WAC5D,iBAAC,QAAQ,EAAC;AAAE,UAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;KAAE;;;WAC5D,mBAAC,QAAQ,EAAC;AAAE,UAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;KAAE;;;WAE/D,sBAAE;;;AACV,UAAI,CAAC,GAAG,CAAC,WAAW,oBAAkB,IAAI,CAAC,WAAW,EAAE,EAAI,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAA;AACrF,UAAI,CAAC,eAAe,EAAE,CAAA;AACtB,UAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAA;AAC3B,UAAG,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAC;AAC1B,qBAAa,CAAC,IAAI,CAAC,cAAc,CAAC,CAAA;AAClC,YAAI,CAAC,cAAc,GAAG,WAAW,CAAC;iBAAM,OAAK,aAAa,EAAE;SAAA,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAA;OACxF;AACD,UAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAE,UAAA,QAAQ;eAAI,QAAQ,EAAE;OAAA,CAAE,CAAA;KACjE;;;WAEU,qBAAC,KAAK,EAAC;AAChB,UAAI,CAAC,GAAG,CAAC,WAAW,EAAE,OAAO,EAAE,KAAK,CAAC,CAAA;AACrC,UAAI,CAAC,gBAAgB,EAAE,CAAA;AACvB,mBAAa,CAAC,IAAI,CAAC,cAAc,CAAC,CAAA;AAClC,UAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAA;AAChC,UAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,OAAO,CAAE,UAAA,QAAQ;eAAI,QAAQ,CAAC,KAAK,CAAC;OAAA,CAAE,CAAA;KACvE;;;WAEU,qBAAC,KAAK,EAAC;AAChB,UAAI,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,CAAC,CAAA;AAC5B,UAAI,CAAC,gBAAgB,EAAE,CAAA;AACvB,UAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,OAAO,CAAE,UAAA,QAAQ;eAAI,QAAQ,CAAC,KAAK,CAAC;OAAA,CAAE,CAAA;KACvE;;;WAEe,4BAAE;AAChB,UAAI,CAAC,QAAQ,CAAC,OAAO,CAAE,UAAA,OAAO;eAAI,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC;OAAA,CAAE,CAAA;KAC1E;;;WAEc,2BAAE;AACf,cAAO,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU;AACtC,aAAK,aAAa,CAAC,UAAU;AAAE,iBAAO,YAAY,CAAA;AAAA,AAClD,aAAK,aAAa,CAAC,IAAI;AAAQ,iBAAO,MAAM,CAAA;AAAA,AAC5C,aAAK,aAAa,CAAC,OAAO;AAAK,iBAAO,SAAS,CAAA;AAAA,AAC/C;AAA+B,iBAAO,QAAQ,CAAA;AAAA,OAC/C;KACF;;;WAEU,uBAAE;AAAE,aAAO,IAAI,CAAC,eAAe,EAAE,KAAK,MAAM,CAAA;KAAE;;;WAEnD,gBAAC,OAAO,EAAC;AACb,UAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAE,UAAA,CAAC;eAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC;OAAA,CAAE,CAAA;KACxE;;;WAEM,iBAAC,KAAK,EAAkB;UAAhB,UAAU,yDAAG,EAAE;;AAC5B,UAAI,OAAO,GAAG,IAAI,OAAO,CAAC,KAAK,EAAE,UAAU,EAAE,IAAI,CAAC,CAAA;AAClD,UAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;AAC3B,aAAO,OAAO,CAAA;KACf;;;WAEG,cAAC,IAAI,EAAC;;;UACH,KAAK,GAAyB,IAAI,CAAlC,KAAK;UAAE,KAAK,GAAkB,IAAI,CAA3B,KAAK;UAAE,OAAO,GAAS,IAAI,CAApB,OAAO;UAAE,GAAG,GAAI,IAAI,CAAX,GAAG;;AAC/B,UAAI,QAAQ,GAAG,SAAX,QAAQ;eAAS,OAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;OAAA,CAAA;AACzD,UAAI,CAAC,GAAG,CAAC,MAAM,EAAK,KAAK,SAAI,KAAK,UAAK,GAAG,QAAK,OAAO,CAAC,CAAA;AACvD,UAAG,IAAI,CAAC,WAAW,EAAE,EAAC;AACpB,gBAAQ,EAAE,CAAA;OACX,MACI;AACH,YAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;OAC/B;KACF;;;;;WAGM,mBAAE;AACP,UAAI,MAAM,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,CAAA;AACzB,UAAG,MAAM,KAAK,IAAI,CAAC,GAAG,EAAC;AAAE,YAAI,CAAC,GAAG,GAAG,CAAC,CAAA;OAAE,MAAM;AAAE,YAAI,CAAC,GAAG,GAAG,MAAM,CAAA;OAAE;;AAElE,aAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAA;KAC3B;;;WAEY,yBAAE;AACb,UAAI,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,WAAW,EAAE,OAAO,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,OAAO,EAAE,EAAC,CAAC,CAAA;KACpF;;;WAEc,2BAAE;AACf,UAAG,IAAI,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAC;AAClD,YAAI,CAAC,UAAU,CAAC,OAAO,CAAE,UAAA,QAAQ;iBAAI,QAAQ,EAAE;SAAA,CAAE,CAAA;AACjD,YAAI,CAAC,UAAU,GAAG,EAAE,CAAA;OACrB;KACF;;;WAEY,uBAAC,UAAU,EAAC;AACvB,UAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA;UAChC,KAAK,GAAyB,GAAG,CAAjC,KAAK;UAAE,KAAK,GAAkB,GAAG,CAA1B,KAAK;UAAE,OAAO,GAAS,GAAG,CAAnB,OAAO;UAAE,GAAG,GAAI,GAAG,CAAV,GAAG;;AAC/B,UAAI,CAAC,GAAG,CAAC,SAAS,GAAK,OAAO,CAAC,MAAM,IAAI,EAAE,CAAA,SAAI,KAAK,SAAI,KAAK,UAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,EAAE,CAAA,EAAI,OAAO,CAAC,CAAA;AACzG,UAAI,CAAC,QAAQ,CAAC,MAAM,CAAE,UAAA,OAAO;eAAI,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC;OAAA,CAAE,CAC5C,OAAO,CAAE,UAAA,OAAO;eAAI,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,CAAC;OAAA,CAAE,CAAA;AACxE,UAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,OAAO,CAAE,UAAA,QAAQ;eAAI,QAAQ,CAAC,GAAG,CAAC;OAAA,CAAE,CAAA;KACvE;;;SAhLU,MAAM;;;;;IAoLN,QAAQ;AAER,WAFA,QAAQ,CAEP,QAAQ,EAAC;0BAFV,QAAQ;;AAGjB,QAAI,CAAC,QAAQ,GAAU,IAAI,CAAA;AAC3B,QAAI,CAAC,KAAK,GAAa,IAAI,CAAA;AAC3B,QAAI,CAAC,aAAa,GAAK,IAAI,CAAA;AAC3B,QAAI,CAAC,MAAM,GAAY,YAAU,EAAE,CAAA;AACnC,QAAI,CAAC,OAAO,GAAW,YAAU,EAAE,CAAA;AACnC,QAAI,CAAC,SAAS,GAAS,YAAU,EAAE,CAAA;AACnC,QAAI,CAAC,OAAO,GAAW,YAAU,EAAE,CAAA;AACnC,QAAI,CAAC,YAAY,GAAM,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAA;AACvD,QAAI,CAAC,UAAU,GAAQ,aAAa,CAAC,UAAU,CAAA;;AAE/C,QAAI,CAAC,IAAI,EAAE,CAAA;GACZ;;eAdU,QAAQ;;WAgBF,2BAAC,QAAQ,EAAC;AACzB,aAAO,QAAQ,CACZ,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,CAC3B,OAAO,CAAC,QAAQ,EAAE,UAAU,CAAC,CAC7B,OAAO,CAAC,IAAI,MAAM,CAAC,QAAQ,GAAG,UAAU,CAAC,SAAS,CAAC,EAAE,KAAK,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC;KACtF;;;WAEU,uBAAE;AACX,aAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,EAAE;AAC1C,aAAK,EAAE,IAAI,CAAC,KAAK;AACjB,cAAM,EAAE,MAAM;OACf,CAAC,CAAA;KACH;;;WAEY,yBAAE;AACb,UAAI,CAAC,KAAK,EAAE,CAAA;AACZ,UAAI,CAAC,UAAU,GAAG,aAAa,CAAC,UAAU,CAAA;KAC3C;;;WAEQ,qBAAE;AACT,UAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAA;AACvB,UAAI,CAAC,aAAa,EAAE,CAAA;KACrB;;;WAEG,gBAAE;;;AACJ,UAAG,EAAE,IAAI,CAAC,UAAU,KAAK,aAAa,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,KAAK,aAAa,CAAC,UAAU,CAAA,AAAC,EAAC;AAAE,eAAM;OAAE;;AAEvG,UAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,EAAE,EAAE,kBAAkB,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,UAAC,IAAI,EAAK;AACnH,YAAG,IAAI,EAAC;cACD,MAAM,GAAqB,IAAI,CAA/B,MAAM;cAAE,KAAK,GAAc,IAAI,CAAvB,KAAK;cAAE,QAAQ,GAAI,IAAI,CAAhB,QAAQ;;AAC5B,iBAAK,KAAK,GAAG,KAAK,CAAA;SACnB,MAAK;AACJ,cAAI,MAAM,GAAG,CAAC,CAAA;SACf;;AAED,gBAAO,MAAM;AACX,eAAK,GAAG;AACN,oBAAQ,CAAC,OAAO,CAAE,UAAA,GAAG;qBAAI,OAAK,SAAS,CAAC,EAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAC,CAAC;aAAA,CAAE,CAAA;AACtE,mBAAK,IAAI,EAAE,CAAA;AACX,kBAAK;AAAA,AACP,eAAK,GAAG;AACN,mBAAK,IAAI,EAAE,CAAA;AACX,kBAAK;AAAA,AACP,eAAK,GAAG;AACN,mBAAK,UAAU,GAAG,aAAa,CAAC,IAAI,CAAA;AACpC,mBAAK,MAAM,EAAE,CAAA;AACb,mBAAK,IAAI,EAAE,CAAA;AACX,kBAAK;AAAA,AACP,eAAK,CAAC,CAAC;AACP,eAAK,GAAG;AACN,mBAAK,OAAO,EAAE,CAAA;AACd,mBAAK,aAAa,EAAE,CAAA;AACpB,kBAAK;AAAA,AACP;AAAS,6CAA+B,MAAM,CAAG;AAAA,SAClD;OACF,CAAC,CAAA;KACH;;;WAEG,cAAC,IAAI,EAAC;;;AACR,UAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,EAAE,EAAE,kBAAkB,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,UAAC,IAAI,EAAK;AAC7H,YAAG,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,EAAC;AAC9B,kBAAK,OAAO,CAAC,MAAM,CAAC,CAAA;AACpB,kBAAK,aAAa,EAAE,CAAA;SACrB;OACF,CAAC,CAAA;KACH;;;WAEI,eAAC,IAAI,EAAE,MAAM,EAAC;AACjB,UAAI,CAAC,UAAU,GAAG,aAAa,CAAC,MAAM,CAAA;AACtC,UAAI,CAAC,OAAO,EAAE,CAAA;KACf;;;SAtFU,QAAQ;;;;;IA0FR,IAAI;WAAJ,IAAI;0BAAJ,IAAI;;;eAAJ,IAAI;;WAED,iBAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAC;AAC1E,UAAG,MAAM,CAAC,cAAc,EAAC;AACvB,YAAI,GAAG,GAAG,IAAI,cAAc,EAAE,CAAA;AAC9B,YAAI,CAAC,cAAc,CAAC,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAA;OAC/E,MAAM;AACL,YAAI,GAAG,GAAG,MAAM,CAAC,cAAc,GACnB,IAAI,cAAc,EAAE;AACpB,YAAI,aAAa,CAAC,mBAAmB,CAAC,CAAA;AAClD,YAAI,CAAC,UAAU,CAAC,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAA;OACnF;KACF;;;WAEoB,wBAAC,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAC;;;AAC9E,SAAG,CAAC,OAAO,GAAG,OAAO,CAAA;AACrB,SAAG,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;AAC1B,SAAG,CAAC,MAAM,GAAG,YAAM;AACjB,YAAI,QAAQ,GAAG,QAAK,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAA;AAC/C,gBAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAA;OAC/B,CAAA;AACD,UAAG,SAAS,EAAC;AAAE,WAAG,CAAC,SAAS,GAAG,SAAS,CAAA;OAAE;;;AAG1C,SAAG,CAAC,UAAU,GAAG,YAAM,EAAE,CAAA;;AAEzB,SAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;KACf;;;WAEgB,oBAAC,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAC;;;AAClF,SAAG,CAAC,OAAO,GAAG,OAAO,CAAA;AACrB,SAAG,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAA;AAChC,SAAG,CAAC,gBAAgB,CAAC,cAAc,EAAE,MAAM,CAAC,CAAA;AAC5C,SAAG,CAAC,OAAO,GAAG,YAAM;AAAE,gBAAQ,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAA;OAAE,CAAA;AAClD,SAAG,CAAC,kBAAkB,GAAG,YAAM;AAC7B,YAAG,GAAG,CAAC,UAAU,KAAK,QAAK,MAAM,CAAC,QAAQ,IAAI,QAAQ,EAAC;AACrD,cAAI,QAAQ,GAAG,QAAK,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAA;AAC/C,kBAAQ,CAAC,QAAQ,CAAC,CAAA;SACnB;OACF,CAAA;AACD,UAAG,SAAS,EAAC;AAAE,WAAG,CAAC,SAAS,GAAG,SAAS,CAAA;OAAE;;AAE1C,SAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;KACf;;;WAEe,mBAAC,IAAI,EAAC;AACpB,aAAO,AAAC,IAAI,IAAI,IAAI,KAAK,EAAE,GAClB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAChB,IAAI,CAAA;KACd;;;WAEe,mBAAC,GAAG,EAAE,SAAS,EAAC;AAC9B,UAAI,QAAQ,GAAG,EAAE,CAAC;AAClB,WAAI,IAAI,GAAG,IAAI,GAAG,EAAC;AAAE,YAAG,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,EAAC;AAAE,mBAAQ;SAAE;AAC3D,YAAI,QAAQ,GAAG,SAAS,GAAM,SAAS,SAAI,GAAG,SAAM,GAAG,CAAA;AACvD,YAAI,QAAQ,GAAG,GAAG,CAAC,GAAG,CAAC,CAAA;AACvB,YAAG,OAAO,QAAQ,KAAK,QAAQ,EAAC;AAC9B,kBAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAA;SAClD,MAAM;AACL,kBAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,GAAG,GAAG,GAAG,kBAAkB,CAAC,QAAQ,CAAC,CAAC,CAAA;SACjF;OACF;AACD,aAAO,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;KAC1B;;;WAEkB,sBAAC,GAAG,EAAE,MAAM,EAAC;AAC9B,UAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,CAAC,EAAC;AAAE,eAAO,GAAG,CAAA;OAAE;;AAElD,UAAI,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAA;AACxC,kBAAU,GAAG,GAAG,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAE;KAClD;;;SAtEU,IAAI;;;;;AAyEjB,IAAI,CAAC,MAAM,GAAG,EAAC,QAAQ,EAAE,CAAC,EAAC,CAAA;;;;;;;;;;;;;;;;IAgBrB,KAAK;AACE,WADP,KAAK,CACG,QAAQ,EAAE,SAAS,EAAC;0BAD5B,KAAK;;AAEP,QAAI,CAAC,QAAQ,GAAI,QAAQ,CAAA;AACzB,QAAI,CAAC,SAAS,GAAG,SAAS,CAAA;AAC1B,QAAI,CAAC,KAAK,GAAO,IAAI,CAAA;AACrB,QAAI,CAAC,KAAK,GAAO,CAAC,CAAA;GACnB;;eANG,KAAK;;WAQJ,iBAAE;AACL,UAAI,CAAC,KAAK,GAAG,CAAC,CAAA;AACd,kBAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;KACzB;;;;;;;;;;;;;;;OAGS,YAAE;;;AACV,kBAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;;AAExB,UAAI,CAAC,KAAK,GAAG,UAAU,CAAC,YAAM;AAC5B,gBAAK,KAAK,GAAG,QAAK,KAAK,GAAG,CAAC,CAAA;AAC3B,gBAAK,QAAQ,EAAE,CAAA;OAChB,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAA;KACnC;;;SArBG,KAAK","file":"app.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * Module dependencies.\n */\n\nvar Emitter = require('component-emitter')\n\n/**\n * Expose `scene`.\n */\n\nmodule.exports = Application\n\n/**\n * Create a new `Application`.\n *\n * @param {Object} element Optional initial element\n */\n\nfunction Application (element) {\n  if (!(this instanceof Application)) return new Application(element)\n  this.options = {}\n  this.sources = {}\n  this.element = element\n}\n\n/**\n * Mixin `Emitter`.\n */\n\nEmitter(Application.prototype)\n\n/**\n * Add a plugin\n *\n * @param {Function} plugin\n */\n\nApplication.prototype.use = function (plugin) {\n  plugin(this)\n  return this\n}\n\n/**\n * Set an option\n *\n * @param {String} name\n */\n\nApplication.prototype.option = function (name, val) {\n  this.options[name] = val\n  return this\n}\n\n/**\n * Set value used somewhere in the IO network.\n */\n\nApplication.prototype.set = function (name, data) {\n  this.sources[name] = data\n  this.emit('source', name, data)\n  return this\n}\n\n/**\n * Mount a virtual element.\n *\n * @param {VirtualElement} element\n */\n\nApplication.prototype.mount = function (element) {\n  this.element = element\n  this.emit('mount', element)\n  return this\n}\n\n/**\n * Remove the world. Unmount everything.\n */\n\nApplication.prototype.unmount = function () {\n  if (!this.element) return\n  this.element = null\n  this.emit('unmount')\n  return this\n}\n","/**\n * All of the events can bind to\n */\n\nmodule.exports = {\n  onBlur: 'blur',\n  onChange: 'change',\n  onClick: 'click',\n  onContextMenu: 'contextmenu',\n  onCopy: 'copy',\n  onCut: 'cut',\n  onDoubleClick: 'dblclick',\n  onDrag: 'drag',\n  onDragEnd: 'dragend',\n  onDragEnter: 'dragenter',\n  onDragExit: 'dragexit',\n  onDragLeave: 'dragleave',\n  onDragOver: 'dragover',\n  onDragStart: 'dragstart',\n  onDrop: 'drop',\n  onFocus: 'focus',\n  onInput: 'input',\n  onInvalid: 'invalid',\n  onKeyDown: 'keydown',\n  onKeyPress: 'keypress',\n  onKeyUp: 'keyup',\n  onMouseDown: 'mousedown',\n  onMouseEnter: 'mouseenter',\n  onMouseLeave: 'mouseleave',\n  onMouseMove: 'mousemove',\n  onMouseOut: 'mouseout',\n  onMouseOver: 'mouseover',\n  onMouseUp: 'mouseup',\n  onPaste: 'paste',\n  onReset: 'reset',\n  onScroll: 'scroll',\n  onSubmit: 'submit',\n  onTouchCancel: 'touchcancel',\n  onTouchEnd: 'touchend',\n  onTouchMove: 'touchmove',\n  onTouchStart: 'touchstart',\n  onWheel: 'wheel'\n}\n","/**\n * Create the application.\n */\n\nexports.tree =\nexports.scene =\nexports.deku = require('./application')\n\n/**\n * Render scenes to the DOM.\n */\n\nif (typeof document !== 'undefined') {\n  exports.render = require('./render')\n}\n\n/**\n * Render scenes to a string\n */\n\nexports.renderString = require('./stringify')","var type = require('component-type')\n\n/**\n * Returns the type of a virtual node\n *\n * @param  {Object} node\n * @return {String}\n */\n\nmodule.exports = function nodeType (node) {\n  var v = type(node)\n  if (v === 'null' || node === false) return 'empty'\n  if (v !== 'object') return 'text'\n  if (type(node.type) === 'string') return 'element'\n  return 'component'\n}\n","/**\n * Dependencies.\n */\n\nvar raf = require('component-raf')\nvar isDom = require('is-dom')\nvar uid = require('get-uid')\nvar keypath = require('object-path')\nvar events = require('./events')\nvar svg = require('./svg')\nvar defaults = require('object-defaults')\nvar forEach = require('fast.js/forEach')\nvar assign = require('fast.js/object/assign')\nvar reduce = require('fast.js/reduce')\nvar nodeType = require('./node-type')\n\n/**\n * Expose `dom`.\n */\n\nmodule.exports = render\n\n/**\n * Render an app to the DOM\n *\n * @param {Application} app\n * @param {HTMLElement} container\n * @param {Object} opts\n *\n * @return {Object}\n */\n\nfunction render (app, container, opts) {\n  var frameId\n  var isRendering\n  var rootId = 'root'\n  var currentElement\n  var currentNativeElement\n  var connections = {}\n  var components = {}\n  var entities = {}\n  var handlers = {}\n  var mountQueue = []\n  var children = {}\n  children[rootId] = {}\n\n  if (!isDom(container)) {\n    throw new Error('Container element must be a DOM element')\n  }\n\n  /**\n   * Rendering options. Batching is only ever really disabled\n   * when running tests, and pooling can be disabled if the user\n   * is doing something stupid with the DOM in their components.\n   */\n\n  var options = defaults(assign({}, app.options || {}, opts || {}), {\n    batching: true\n  })\n\n  /**\n   * Listen to DOM events\n   */\n  var rootElement = getRootElement(container)\n  addNativeEventListeners()\n\n  /**\n   * Watch for changes to the app so that we can update\n   * the DOM as needed.\n   */\n\n  app.on('unmount', onunmount)\n  app.on('mount', onmount)\n  app.on('source', onupdate)\n\n  /**\n   * If the app has already mounted an element, we can just\n   * render that straight away.\n   */\n\n  if (app.element) render()\n\n  /**\n   * Teardown the DOM rendering so that it stops\n   * rendering and everything can be garbage collected.\n   */\n\n  function teardown () {\n    removeNativeEventListeners()\n    removeNativeElement()\n    app.off('unmount', onunmount)\n    app.off('mount', onmount)\n    app.off('source', onupdate)\n  }\n\n  /**\n   * Swap the current rendered node with a new one that is rendered\n   * from the new virtual element mounted on the app.\n   *\n   * @param {VirtualElement} element\n   */\n\n  function onmount () {\n    invalidate()\n  }\n\n  /**\n   * If the app unmounts an element, we should clear out the current\n   * rendered element. This will remove all the entities.\n   */\n\n  function onunmount () {\n    removeNativeElement()\n    currentElement = null\n  }\n\n  /**\n   * Update all components that are bound to the source\n   *\n   * @param {String} name\n   * @param {*} data\n   */\n\n  function onupdate (name, data) {\n    if (!connections[name]) return;\n    connections[name].forEach(function(update) {\n      update(data)\n    })\n  }\n\n  /**\n   * Render and mount a component to the native dom.\n   *\n   * @param {Entity} entity\n   * @return {HTMLElement}\n   */\n\n  function mountEntity (entity) {\n    register(entity)\n    setSources(entity)\n    children[entity.id] = {}\n    entities[entity.id] = entity\n\n    // commit initial state and props.\n    commit(entity)\n\n    // callback before mounting.\n    trigger('beforeMount', entity, [entity.context])\n    trigger('beforeRender', entity, [entity.context])\n\n    // render virtual element.\n    var virtualElement = renderEntity(entity)\n    // create native element.\n    var nativeElement = toNative(entity.id, '0', virtualElement)\n\n    entity.virtualElement = virtualElement\n    entity.nativeElement = nativeElement\n\n    // Fire afterRender and afterMount hooks at the end\n    // of the render cycle\n    mountQueue.push(entity.id)\n\n    return nativeElement\n  }\n\n  /**\n   * Remove a component from the native dom.\n   *\n   * @param {Entity} entity\n   */\n\n  function unmountEntity (entityId) {\n    var entity = entities[entityId]\n    if (!entity) return\n    trigger('beforeUnmount', entity, [entity.context, entity.nativeElement])\n    unmountChildren(entityId)\n    removeAllEvents(entityId)\n    var componentEntities = components[entityId].entities;\n    delete componentEntities[entityId]\n    delete components[entityId]\n    delete entities[entityId]\n    delete children[entityId]\n  }\n\n  /**\n   * Render the entity and make sure it returns a node\n   *\n   * @param {Entity} entity\n   *\n   * @return {VirtualTree}\n   */\n\n  function renderEntity (entity) {\n    var component = entity.component\n    var fn = typeof component === 'function' ? component : component.render\n    if (!fn) throw new Error('Component needs a render function')\n    var result = fn(entity.context, setState(entity))\n    if (!result) throw new Error('Render function must return an element.')\n    return result\n  }\n\n  /**\n   * Whenever setState or setProps is called, we mark the entity\n   * as dirty in the renderer. This lets us optimize the re-rendering\n   * and skip components that definitely haven't changed.\n   *\n   * @param {Entity} entity\n   *\n   * @return {Function} A curried function for updating the state of an entity\n   */\n\n  function setState (entity) {\n    return function (nextState) {\n      updateEntityState(entity, nextState)\n    }\n  }\n\n  /**\n   * Tell the app it's dirty and needs to re-render. If batching is disabled\n   * we can just trigger a render immediately, otherwise we'll wait until\n   * the next available frame.\n   */\n\n  function invalidate () {\n    if (!options.batching) {\n      if (!isRendering) render()\n    } else {\n      if (!frameId) frameId = raf(render)\n    }\n  }\n\n  /**\n   * Update the DOM. If the update fails we stop the loop\n   * so we don't get errors on every frame.\n   *\n   * @api public\n   */\n\n  function render () {\n    // If this is called synchronously we need to\n    // cancel any pending future updates\n    clearFrame()\n\n    // If the rendering from the previous frame is still going,\n    // we'll just wait until the next frame. Ideally renders should\n    // not take over 16ms to stay within a single frame, but this should\n    // catch it if it does.\n    if (isRendering) {\n      frameId = raf(render)\n      return\n    } else {\n      isRendering = true\n    }\n\n    // 1. If there isn't a native element rendered for the current mounted element\n    // then we need to create it from scratch.\n    // 2. If a new element has been mounted, we should diff them.\n    // 3. We should update check all child components for changes.\n    if (!currentNativeElement) {\n      currentElement = app.element\n      currentNativeElement = toNative(rootId, '0', currentElement)\n      if (container.children.length > 0) {\n        console.info('deku: The container element is not empty. These elements will be removed. Read more: http://cl.ly/b0Sr')\n      }\n      if (container === document.body) {\n        console.warn('deku: Using document.body is allowed but it can cause some issues. Read more: http://cl.ly/b0SC')\n      }\n      removeAllChildren(container)\n      container.appendChild(currentNativeElement)\n    } else if (currentElement !== app.element) {\n      currentNativeElement = patch(rootId, currentElement, app.element, currentNativeElement)\n      currentElement = app.element\n      updateChildren(rootId)\n    } else {\n      updateChildren(rootId)\n    }\n\n    // Call mount events on all new entities\n    flushMountQueue()\n\n    // Allow rendering again.\n    isRendering = false\n\n  }\n\n  /**\n   * Call hooks for all new entities that have been created in\n   * the last render from the bottom up.\n   */\n\n  function flushMountQueue () {\n    while (mountQueue.length > 0) {\n      var entityId = mountQueue.shift()\n      var entity = entities[entityId]\n      trigger('afterRender', entity, [entity.context, entity.nativeElement])\n      trigger('afterMount', entity, [entity.context, entity.nativeElement, setState(entity)])\n    }\n  }\n\n  /**\n   * Clear the current scheduled frame\n   */\n\n  function clearFrame () {\n    if (!frameId) return\n    raf.cancel(frameId)\n    frameId = 0\n  }\n\n  /**\n   * Update a component.\n   *\n   * The entity is just the data object for a component instance.\n   *\n   * @param {String} id Component instance id.\n   */\n\n  function updateEntity (entityId) {\n    var entity = entities[entityId]\n    setSources(entity)\n\n    if (!shouldUpdate(entity)) {\n      commit(entity)\n      return updateChildren(entityId)\n    }\n\n    var currentTree = entity.virtualElement\n    var nextProps = entity.pendingProps\n    var nextState = entity.pendingState\n    var previousState = entity.context.state\n    var previousProps = entity.context.props\n\n    // hook before rendering. could modify state just before the render occurs.\n    trigger('beforeUpdate', entity, [entity.context, nextProps, nextState])\n    trigger('beforeRender', entity, [entity.context])\n\n    // commit state and props.\n    commit(entity)\n\n    // re-render.\n    var nextTree = renderEntity(entity)\n\n    // if the tree is the same we can just skip this component\n    // but we should still check the children to see if they're dirty.\n    // This allows us to memoize the render function of components.\n    if (nextTree === currentTree) return updateChildren(entityId)\n\n    // apply new virtual tree to native dom.\n    entity.nativeElement = patch(entityId, currentTree, nextTree, entity.nativeElement)\n    entity.virtualElement = nextTree\n    updateChildren(entityId)\n\n    // trigger render hook\n    trigger('afterRender', entity, [entity.context, entity.nativeElement])\n\n    // trigger afterUpdate after all children have updated.\n    trigger('afterUpdate', entity, [entity.context, previousProps, previousState, setState(entity)])\n  }\n\n  /**\n   * Update all the children of an entity.\n   *\n   * @param {String} id Component instance id.\n   */\n\n  function updateChildren (entityId) {\n    forEach(children[entityId], function (childId) {\n      updateEntity(childId)\n    })\n  }\n\n  /**\n   * Remove all of the child entities of an entity\n   *\n   * @param {Entity} entity\n   */\n\n  function unmountChildren (entityId) {\n    forEach(children[entityId], function (childId) {\n      unmountEntity(childId)\n    })\n  }\n\n  /**\n   * Remove the root element. If this is called synchronously we need to\n   * cancel any pending future updates.\n   */\n\n  function removeNativeElement () {\n    clearFrame()\n    removeElement(rootId, '0', currentNativeElement)\n    currentNativeElement = null\n  }\n\n  /**\n   * Create a native element from a virtual element.\n   *\n   * @param {String} entityId\n   * @param {String} path\n   * @param {Object} vnode\n   *\n   * @return {HTMLDocumentFragment}\n   */\n\n  function toNative (entityId, path, vnode) {\n    switch (nodeType(vnode)) {\n      case 'text': return toNativeText(vnode)\n      case 'empty': return toNativeEmptyElement(entityId, path)\n      case 'element': return toNativeElement(entityId, path, vnode)\n      case 'component': return toNativeComponent(entityId, path, vnode)\n    }\n  }\n\n  /**\n   * Create a native text element from a virtual element.\n   *\n   * @param {Object} vnode\n   */\n\n  function toNativeText (text) {\n    return document.createTextNode(text)\n  }\n\n  /**\n   * Create a native element from a virtual element.\n   */\n\n  function toNativeElement (entityId, path, vnode) {\n    var el\n    var attributes = vnode.attributes\n    var tagName = vnode.type\n    var childNodes = vnode.children\n\n    // create element either from pool or fresh.\n    if (svg.isElement(tagName)) {\n      el = document.createElementNS(svg.namespace, tagName)\n    } else {\n      el = document.createElement(tagName)\n    }\n\n    // set attributes.\n    forEach(attributes, function (value, name) {\n      setAttribute(entityId, path, el, name, value)\n    })\n\n    // add children.\n    forEach(childNodes, function (child, i) {\n      var childEl = toNative(entityId, path + '.' + i, child)\n      if (!childEl.parentNode) el.appendChild(childEl)\n    })\n\n    // store keys on the native element for fast event handling.\n    el.__entity__ = entityId\n    el.__path__ = path\n\n    return el\n  }\n\n  /**\n   * Create a native element from a virtual element.\n   */\n\n  function toNativeEmptyElement (entityId, path) {\n    var el = document.createElement('noscript')\n    el.__entity__ = entityId\n    el.__path__ = path\n    return el\n  }\n\n  /**\n   * Create a native element from a component.\n   */\n\n  function toNativeComponent (entityId, path, vnode) {\n    var child = new Entity(vnode.type, assign({ children: vnode.children }, vnode.attributes), entityId)\n    children[entityId][path] = child.id\n    return mountEntity(child)\n  }\n\n  /**\n   * Patch an element with the diff from two trees.\n   */\n\n  function patch (entityId, prev, next, el) {\n    return diffNode('0', entityId, prev, next, el)\n  }\n\n  /**\n   * Create a diff between two trees of nodes.\n   */\n\n  function diffNode (path, entityId, prev, next, el) {\n    var leftType = nodeType(prev)\n    var rightType = nodeType(next)\n\n    // Type changed. This could be from element->text, text->ComponentA,\n    // ComponentA->ComponentB etc. But NOT div->span. These are the same type\n    // (ElementNode) but different tag name.\n    if (leftType !== rightType) return replaceElement(entityId, path, el, next)\n\n    switch (rightType) {\n      case 'text': return diffText(prev, next, el)\n      case 'empty': return el\n      case 'element': return diffElement(path, entityId, prev, next, el)\n      case 'component': return diffComponent(path, entityId, prev, next, el)\n    }\n  }\n\n  /**\n   * Diff two text nodes and update the element.\n   */\n\n  function diffText (previous, current, el) {\n    if (current !== previous) el.data = current\n    return el\n  }\n\n  /**\n   * Diff the children of an ElementNode.\n   */\n\n  function diffChildren (path, entityId, prev, next, el) {\n    var positions = []\n    var hasKeys = false\n    var childNodes = Array.prototype.slice.apply(el.childNodes)\n    var leftKeys = reduce(prev.children, keyMapReducer, {})\n    var rightKeys = reduce(next.children, keyMapReducer, {})\n    var currentChildren = assign({}, children[entityId])\n\n    function keyMapReducer (acc, child, i) {\n      if (child && child.attributes && child.attributes.key != null) {\n        acc[child.attributes.key] = {\n          element: child,\n          index: i\n        }\n        hasKeys = true\n      }\n      return acc\n    }\n\n    // Diff all of the nodes that have keys. This lets us re-used elements\n    // instead of overriding them and lets us move them around.\n    if (hasKeys) {\n\n      // Removals\n      forEach(leftKeys, function (leftNode, key) {\n        if (rightKeys[key] == null) {\n          var leftPath = path + '.' + leftNode.index\n          removeElement(\n            entityId,\n            leftPath,\n            childNodes[leftNode.index]\n          )\n        }\n      })\n\n      // Update nodes\n      forEach(rightKeys, function (rightNode, key) {\n        var leftNode = leftKeys[key]\n\n        // We only want updates for now\n        if (leftNode == null) return\n\n        var leftPath = path + '.' + leftNode.index\n\n        // Updated\n        positions[rightNode.index] = diffNode(\n          leftPath,\n          entityId,\n          leftNode.element,\n          rightNode.element,\n          childNodes[leftNode.index]\n        )\n      })\n\n      // Update the positions of all child components and event handlers\n      forEach(rightKeys, function (rightNode, key) {\n        var leftNode = leftKeys[key]\n\n        // We just want elements that have moved around\n        if (leftNode == null || leftNode.index === rightNode.index) return\n\n        var rightPath = path + '.' + rightNode.index\n        var leftPath = path + '.' + leftNode.index\n\n        // Update all the child component path positions to match\n        // the latest positions if they've changed. This is a bit hacky.\n        forEach(currentChildren, function (childId, childPath) {\n          if (leftPath === childPath) {\n            delete children[entityId][childPath]\n            children[entityId][rightPath] = childId\n          }\n        })\n      })\n\n      // Now add all of the new nodes last in case their path\n      // would have conflicted with one of the previous paths.\n      forEach(rightKeys, function (rightNode, key) {\n        var rightPath = path + '.' + rightNode.index\n        if (leftKeys[key] == null) {\n          positions[rightNode.index] = toNative(\n            entityId,\n            rightPath,\n            rightNode.element\n          )\n        }\n      })\n\n    } else {\n      var maxLength = Math.max(prev.children.length, next.children.length)\n\n      // Now diff all of the nodes that don't have keys\n      for (var i = 0; i < maxLength; i++) {\n        var leftNode = prev.children[i]\n        var rightNode = next.children[i]\n\n        // Removals\n        if (rightNode === undefined) {\n          removeElement(\n            entityId,\n            path + '.' + i,\n            childNodes[i]\n          )\n          continue\n        }\n\n        // New Node\n        if (leftNode === undefined) {\n          positions[i] = toNative(\n            entityId,\n            path + '.' + i,\n            rightNode\n          )\n          continue\n        }\n\n        // Updated\n        positions[i] = diffNode(\n          path + '.' + i,\n          entityId,\n          leftNode,\n          rightNode,\n          childNodes[i]\n        )\n      }\n    }\n\n    // Reposition all the elements\n    forEach(positions, function (childEl, newPosition) {\n      var target = el.childNodes[newPosition]\n      if (childEl && childEl !== target) {\n        if (target) {\n          el.insertBefore(childEl, target)\n        } else {\n          el.appendChild(childEl)\n        }\n      }\n    })\n  }\n\n  /**\n   * Diff the attributes and add/remove them.\n   */\n\n  function diffAttributes (prev, next, el, entityId, path) {\n    var nextAttrs = next.attributes\n    var prevAttrs = prev.attributes\n\n    // add new attrs\n    forEach(nextAttrs, function (value, name) {\n      if (events[name] || !(name in prevAttrs) || prevAttrs[name] !== value) {\n        setAttribute(entityId, path, el, name, value)\n      }\n    })\n\n    // remove old attrs\n    forEach(prevAttrs, function (value, name) {\n      if (!(name in nextAttrs)) {\n        removeAttribute(entityId, path, el, name)\n      }\n    })\n  }\n\n  /**\n   * Update a component with the props from the next node. If\n   * the component type has changed, we'll just remove the old one\n   * and replace it with the new component.\n   */\n\n  function diffComponent (path, entityId, prev, next, el) {\n    if (next.type !== prev.type) {\n      return replaceElement(entityId, path, el, next)\n    } else {\n      var targetId = children[entityId][path]\n\n      // This is a hack for now\n      if (targetId) {\n        updateEntityProps(targetId, assign({ children: next.children }, next.attributes))\n      }\n\n      return el\n    }\n  }\n\n  /**\n   * Diff two element nodes.\n   */\n\n  function diffElement (path, entityId, prev, next, el) {\n    if (next.type !== prev.type) return replaceElement(entityId, path, el, next)\n    diffAttributes(prev, next, el, entityId, path)\n    diffChildren(path, entityId, prev, next, el)\n    return el\n  }\n\n  /**\n   * Removes an element from the DOM and unmounts and components\n   * that are within that branch\n   *\n   * side effects:\n   *   - removes element from the DOM\n   *   - removes internal references\n   *\n   * @param {String} entityId\n   * @param {String} path\n   * @param {HTMLElement} el\n   */\n\n  function removeElement (entityId, path, el) {\n    var childrenByPath = children[entityId]\n    var childId = childrenByPath[path]\n    var entityHandlers = handlers[entityId] || {}\n    var removals = []\n\n    // If the path points to a component we should use that\n    // components element instead, because it might have moved it.\n    if (childId) {\n      var child = entities[childId]\n      el = child.nativeElement\n      unmountEntity(childId)\n      removals.push(path)\n    } else {\n\n      // Just remove the text node\n      if (!isElement(el)) return el && el.parentNode.removeChild(el)\n\n      // Then we need to find any components within this\n      // branch and unmount them.\n      forEach(childrenByPath, function (childId, childPath) {\n        if (childPath === path || isWithinPath(path, childPath)) {\n          unmountEntity(childId)\n          removals.push(childPath)\n        }\n      })\n\n      // Remove all events at this path or below it\n      forEach(entityHandlers, function (fn, handlerPath) {\n        if (handlerPath === path || isWithinPath(path, handlerPath)) {\n          removeEvent(entityId, handlerPath)\n        }\n      })\n    }\n\n    // Remove the paths from the object without touching the\n    // old object. This keeps the object using fast properties.\n    forEach(removals, function (path) {\n      delete children[entityId][path]\n    })\n\n    // Remove it from the DOM\n    el.parentNode.removeChild(el)\n  }\n\n  /**\n   * Replace an element in the DOM. Removing all components\n   * within that element and re-rendering the new virtual node.\n   *\n   * @param {Entity} entity\n   * @param {String} path\n   * @param {HTMLElement} el\n   * @param {Object} vnode\n   *\n   * @return {void}\n   */\n\n  function replaceElement (entityId, path, el, vnode) {\n    var parent = el.parentNode\n    var index = Array.prototype.indexOf.call(parent.childNodes, el)\n\n    // remove the previous element and all nested components. This\n    // needs to happen before we create the new element so we don't\n    // get clashes on the component paths.\n    removeElement(entityId, path, el)\n\n    // then add the new element in there\n    var newEl = toNative(entityId, path, vnode)\n    var target = parent.childNodes[index]\n\n    if (target) {\n      parent.insertBefore(newEl, target)\n    } else {\n      parent.appendChild(newEl)\n    }\n\n    // walk up the tree and update all `entity.nativeElement` references.\n    if (entityId !== 'root' && path === '0') {\n      updateNativeElement(entityId, newEl)\n    }\n\n    return newEl\n  }\n\n  /**\n   * Update all entities in a branch that have the same nativeElement. This\n   * happens when a component has another component as it's root node.\n   *\n   * @param {String} entityId\n   * @param {HTMLElement} newEl\n   *\n   * @return {void}\n   */\n\n  function updateNativeElement (entityId, newEl) {\n    var target = entities[entityId]\n    if (target.ownerId === 'root') return\n    if (children[target.ownerId]['0'] === entityId) {\n      entities[target.ownerId].nativeElement = newEl\n      updateNativeElement(target.ownerId, newEl)\n    }\n  }\n\n  /**\n   * Set the attribute of an element, performing additional transformations\n   * dependning on the attribute name\n   *\n   * @param {HTMLElement} el\n   * @param {String} name\n   * @param {String} value\n   */\n\n  function setAttribute (entityId, path, el, name, value) {\n    if (!value) {\n      removeAttribute(entityId, path, el, name)\n      return\n    }\n    if (events[name]) {\n      addEvent(entityId, path, events[name], value)\n      return\n    }\n    switch (name) {\n      case 'checked':\n      case 'disabled':\n      case 'selected':\n        el[name] = true\n        break\n      case 'innerHTML':\n        el.innerHTML = value\n        break\n      case 'value':\n        setElementValue(el, value)\n        break\n      case svg.isAttribute(name):\n        el.setAttributeNS(svg.namespace, name, value)\n        break\n      default:\n        el.setAttribute(name, value)\n        break\n    }\n  }\n\n  /**\n   * Remove an attribute, performing additional transformations\n   * dependning on the attribute name\n   *\n   * @param {HTMLElement} el\n   * @param {String} name\n   */\n\n  function removeAttribute (entityId, path, el, name) {\n    if (events[name]) {\n      removeEvent(entityId, path, events[name])\n      return\n    }\n    switch (name) {\n      case 'checked':\n      case 'disabled':\n      case 'selected':\n        el[name] = false\n        break\n      case 'innerHTML':\n        el.innerHTML = ''\n      case 'value':\n        setElementValue(el, null)\n        break\n      default:\n        el.removeAttribute(name)\n        break\n    }\n  }\n\n  /**\n   * Checks to see if one tree path is within\n   * another tree path. Example:\n   *\n   * 0.1 vs 0.1.1 = true\n   * 0.2 vs 0.3.5 = false\n   *\n   * @param {String} target\n   * @param {String} path\n   *\n   * @return {Boolean}\n   */\n\n  function isWithinPath (target, path) {\n    return path.indexOf(target + '.') === 0\n  }\n\n  /**\n   * Is the DOM node an element node\n   *\n   * @param {HTMLElement} el\n   *\n   * @return {Boolean}\n   */\n\n  function isElement (el) {\n    return !!(el && el.tagName)\n  }\n\n  /**\n   * Remove all the child nodes from an element\n   *\n   * @param {HTMLElement} el\n   */\n\n  function removeAllChildren (el) {\n    while (el.firstChild) el.removeChild(el.firstChild)\n  }\n\n  /**\n   * Trigger a hook on a component.\n   *\n   * @param {String} name Name of hook.\n   * @param {Entity} entity The component instance.\n   * @param {Array} args To pass along to hook.\n   */\n\n  function trigger (name, entity, args) {\n    if (typeof entity.component[name] !== 'function') return\n    return entity.component[name].apply(null, args)\n  }\n\n  /**\n   * Update an entity to match the latest rendered vode. We always\n   * replace the props on the component when composing them. This\n   * will trigger a re-render on all children below this point.\n   *\n   * @param {Entity} entity\n   * @param {String} path\n   * @param {Object} vnode\n   *\n   * @return {void}\n   */\n\n  function updateEntityProps (entityId, nextProps) {\n    var entity = entities[entityId]\n    entity.pendingProps = defaults({}, nextProps, entity.component.defaultProps || {})\n    entity.dirty = true\n    invalidate()\n  }\n\n  /**\n   * Update component instance state.\n   */\n\n  function updateEntityState (entity, nextState) {\n    entity.pendingState = assign(entity.pendingState, nextState)\n    entity.dirty = true\n    invalidate()\n  }\n\n  /**\n   * Commit props and state changes to an entity.\n   */\n\n  function commit (entity) {\n    entity.context = {\n      state: entity.pendingState,\n      props: entity.pendingProps,\n      id: entity.id\n    }\n    entity.pendingState = assign({}, entity.context.state)\n    entity.pendingProps = assign({}, entity.context.props)\n    entity.dirty = false\n    if (typeof entity.component.validate === 'function') {\n      entity.component.validate(entity.context)\n    }\n  }\n\n  /**\n   * Try to avoid creating new virtual dom if possible.\n   *\n   * Later we may expose this so you can override, but not there yet.\n   */\n\n  function shouldUpdate (entity) {\n    if (!entity.dirty) return false\n    if (!entity.component.shouldUpdate) return true\n    var nextProps = entity.pendingProps\n    var nextState = entity.pendingState\n    var bool = entity.component.shouldUpdate(entity.context, nextProps, nextState)\n    return bool\n  }\n\n  /**\n   * Register an entity.\n   *\n   * This is mostly to pre-preprocess component properties and values chains.\n   *\n   * The end result is for every component that gets mounted,\n   * you create a set of IO nodes in the network from the `value` definitions.\n   *\n   * @param {Component} component\n   */\n\n  function register (entity) {\n    registerEntity(entity)\n    var component = entity.component\n    if (component.registered) return\n\n    // initialize sources once for a component type.\n    registerSources(entity)\n    component.registered = true\n  }\n\n  /**\n   * Add entity to data-structures related to components/entities.\n   *\n   * @param {Entity} entity\n   */\n\n  function registerEntity(entity) {\n    var component = entity.component\n    // all entities for this component type.\n    var entities = component.entities = component.entities || {}\n    // add entity to component list\n    entities[entity.id] = entity\n    // map to component so you can remove later.\n    components[entity.id] = component\n  }\n\n  /**\n   * Initialize sources for a component by type.\n   *\n   * @param {Entity} entity\n   */\n\n  function registerSources(entity) {\n    var component = components[entity.id]\n    // get 'class-level' sources.\n    // if we've already hooked it up, then we're good.\n    var sources = component.sources\n    if (sources) return\n    var entities = component.entities\n\n    // hook up sources.\n    var map = component.sourceToPropertyName = {}\n    component.sources = sources = []\n    var propTypes = component.propTypes\n    for (var name in propTypes) {\n      var data = propTypes[name]\n      if (!data) continue\n      if (!data.source) continue\n      sources.push(data.source)\n      map[data.source] = name\n    }\n\n    // send value updates to all component instances.\n    sources.forEach(function (source) {\n      connections[source] = connections[source] || []\n      connections[source].push(update)\n\n      function update (data) {\n        var prop = map[source]\n        for (var entityId in entities) {\n          var entity = entities[entityId]\n          var changes = {}\n          changes[prop] = data\n          updateEntityProps(entityId, assign(entity.pendingProps, changes))\n        }\n      }\n    })\n  }\n\n  /**\n   * Set the initial source value on the entity\n   *\n   * @param {Entity} entity\n   */\n\n  function setSources (entity) {\n    var component = entity.component\n    var map = component.sourceToPropertyName\n    var sources = component.sources\n    sources.forEach(function (source) {\n      var name = map[source]\n      if (entity.pendingProps[name] != null) return\n      entity.pendingProps[name] = app.sources[source] // get latest value plugged into global store\n    })\n  }\n\n  /**\n   * Add all of the DOM event listeners\n   */\n\n  function addNativeEventListeners () {\n    forEach(events, function (eventType) {\n      rootElement.addEventListener(eventType, handleEvent, true)\n    })\n  }\n\n  /**\n   * Add all of the DOM event listeners\n   */\n\n  function removeNativeEventListeners () {\n    forEach(events, function (eventType) {\n      rootElement.removeEventListener(eventType, handleEvent, true)\n    })\n  }\n\n  /**\n   * Handle an event that has occured within the container\n   *\n   * @param {Event} event\n   */\n\n  function handleEvent (event) {\n    var target = event.target\n    var eventType = event.type\n\n    // Walk up the DOM tree and see if there is a handler\n    // for this event type higher up.\n    while (target) {\n      var fn = keypath.get(handlers, [target.__entity__, target.__path__, eventType])\n      if (fn) {\n        event.delegateTarget = target\n        if (fn(event) === false) break\n      }\n      target = target.parentNode\n    }\n  }\n\n  /**\n   * Bind events for an element, and all it's rendered child elements.\n   *\n   * @param {String} path\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  function addEvent (entityId, path, eventType, fn) {\n    keypath.set(handlers, [entityId, path, eventType], function (e) {\n      var entity = entities[entityId]\n      if (entity) {\n        fn.call(null, e, entity.context, setState(entity))\n      } else {\n        fn.call(null, e)\n      }\n    })\n  }\n\n  /**\n   * Unbind events for a entityId\n   *\n   * @param {String} entityId\n   */\n\n  function removeEvent (entityId, path, eventType) {\n    var args = [entityId]\n    if (path) args.push(path)\n    if (eventType) args.push(eventType)\n    keypath.del(handlers, args)\n  }\n\n  /**\n   * Unbind all events from an entity\n   *\n   * @param {Entity} entity\n   */\n\n  function removeAllEvents (entityId) {\n    keypath.del(handlers, [entityId])\n  }\n\n  /**\n   * Used for debugging to inspect the current state without\n   * us needing to explicitly manage storing/updating references.\n   *\n   * @return {Object}\n   */\n\n  function inspect () {\n    return {\n      entities: entities,\n      handlers: handlers,\n      connections: connections,\n      currentElement: currentElement,\n      options: options,\n      app: app,\n      container: container,\n      children: children\n    }\n  }\n\n  /**\n   * Return an object that lets us completely remove the automatic\n   * DOM rendering and export debugging tools.\n   */\n\n  return {\n    remove: teardown,\n    inspect: inspect\n  }\n}\n\n/**\n * A rendered component instance.\n *\n * This manages the lifecycle, props and state of the component.\n * It's basically just a data object for more straightfoward lookup.\n *\n * @param {Component} component\n * @param {Object} props\n */\n\nfunction Entity (component, props, ownerId) {\n  this.id = uid()\n  this.ownerId = ownerId\n  this.component = component\n  this.propTypes = component.propTypes || {}\n  this.context = {}\n  this.context.id = this.id\n  this.context.props = defaults(props || {}, component.defaultProps || {})\n  this.context.state = this.component.initialState ? this.component.initialState(this.context.props) : {}\n  this.pendingProps = assign({}, this.context.props)\n  this.pendingState = assign({}, this.context.state)\n  this.dirty = false\n  this.virtualElement = null\n  this.nativeElement = null\n  this.displayName = component.name || 'Component'\n}\n\n/**\n * Retrieve the nearest 'body' ancestor of the given element or else the root\n * element of the document in which stands the given element.\n *\n * This is necessary if you want to attach the events handler to the correct\n * element and be able to dispatch events in document fragments such as\n * Shadow DOM.\n *\n * @param  {HTMLElement} el The element on which we will render an app.\n * @return {HTMLElement}    The root element on which we will attach the events\n *                          handler.\n */\n\nfunction getRootElement (el) {\n  while (el.parentElement) {\n    if (el.tagName === 'BODY' || !el.parentElement) {\n      return el\n    }\n    el = el.parentElement\n  }\n  return el\n}\n\n/**\n * Set the value property of an element and keep the text selection\n * for input fields.\n *\n * @param {HTMLElement} el\n * @param {String} value\n */\n\nfunction setElementValue (el, value) {\n  if (el.tagName !== 'INPUT') {\n    el.value = value\n    return\n  }\n  var start = el.selectionStart\n  var end = el.selectionEnd\n  el.value = value\n  el.setSelectionRange(start, end)\n}","var defaults = require('object-defaults')\nvar nodeType = require('./node-type')\nvar type = require('component-type')\n\n/**\n * Expose `stringify`.\n */\n\nmodule.exports = function (app) {\n  if (!app.element) {\n    throw new Error('No element mounted')\n  }\n\n  /**\n   * Render to string.\n   *\n   * @param {Component} component\n   * @param {Object} [props]\n   * @return {String}\n   */\n\n  function stringify (component, optProps) {\n    var propTypes = component.propTypes || {}\n    var props = defaults(optProps || {}, component.defaultProps || {})\n    var state = component.initialState ? component.initialState(props) : {}\n\n    for (var name in propTypes) {\n      var options = propTypes[name]\n      if (options.source) {\n        props[name] = app.sources[options.source]\n      }\n    }\n\n    if (component.beforeMount) component.beforeMount({ props: props, state: state })\n    if (component.beforeRender) component.beforeRender({ props: props, state: state })\n    var node = component.render({ props: props, state: state })\n    return stringifyNode(node, '0')\n  }\n\n  /**\n   * Render a node to a string\n   *\n   * @param {Node} node\n   * @param {Tree} tree\n   *\n   * @return {String}\n   */\n\n  function stringifyNode (node, path) {\n    switch (nodeType(node)) {\n      case 'empty': return '<noscript />'\n      case 'text': return node\n      case 'element':\n        var children = node.children\n        var attributes = node.attributes\n        var tagName = node.type\n        var innerHTML = attributes.innerHTML\n        var str = '<' + tagName + attrs(attributes) + '>'\n\n        if (innerHTML) {\n          str += innerHTML\n        } else {\n          for (var i = 0, n = children.length; i < n; i++) {\n            str += stringifyNode(children[i], path + '.' + i)\n          }\n        }\n\n        str += '</' + tagName + '>'\n        return str\n      case 'component': return stringify(node.type, node.attributes)\n    }\n\n    throw new Error('Invalid type')\n  }\n\n  return stringifyNode(app.element, '0')\n}\n\n/**\n * HTML attributes to string.\n *\n * @param {Object} attributes\n * @return {String}\n * @api private\n */\n\nfunction attrs (attributes) {\n  var str = ''\n  for (var key in attributes) {\n    var value = attributes[key]\n    if (key === 'innerHTML') continue\n    if (isValidAttributeValue(value)) str += attr(key, attributes[key])\n  }\n  return str\n}\n\n/**\n * HTML attribute to string.\n *\n * @param {String} key\n * @param {String} val\n * @return {String}\n * @api private\n */\n\nfunction attr (key, val) {\n  return ' ' + key + '=\"' + val + '\"'\n}\n\n/**\n * Is a value able to be set a an attribute value?\n *\n * @param {Any} value\n *\n * @return {Boolean}\n */\n\nfunction isValidAttributeValue (value) {\n  var valueType = type(value)\n  return (valueType === 'string' || valueType === 'boolean' || valueType === 'number')\n}\n","module.exports = {\n  isElement: require('is-svg-element').isElement,\n  isAttribute: require('is-svg-attribute'),\n  namespace: 'http://www.w3.org/2000/svg'\n}\n","\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks['$' + event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","/**\n * Expose `requestAnimationFrame()`.\n */\n\nexports = module.exports = window.requestAnimationFrame\n  || window.webkitRequestAnimationFrame\n  || window.mozRequestAnimationFrame\n  || fallback;\n\n/**\n * Fallback implementation.\n */\n\nvar prev = new Date().getTime();\nfunction fallback(fn) {\n  var curr = new Date().getTime();\n  var ms = Math.max(0, 16 - (curr - prev));\n  var req = setTimeout(fn, ms);\n  prev = curr;\n  return req;\n}\n\n/**\n * Cancel.\n */\n\nvar cancel = window.cancelAnimationFrame\n  || window.webkitCancelAnimationFrame\n  || window.mozCancelAnimationFrame\n  || window.clearTimeout;\n\nexports.cancel = function(id){\n  cancel.call(window, id);\n};\n","/**\n * toString ref.\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Return the type of `val`.\n *\n * @param {Mixed} val\n * @return {String}\n * @api public\n */\n\nmodule.exports = function(val){\n  switch (toString.call(val)) {\n    case '[object Date]': return 'date';\n    case '[object RegExp]': return 'regexp';\n    case '[object Arguments]': return 'arguments';\n    case '[object Array]': return 'array';\n    case '[object Error]': return 'error';\n  }\n\n  if (val === null) return 'null';\n  if (val === undefined) return 'undefined';\n  if (val !== val) return 'nan';\n  if (val && val.nodeType === 1) return 'element';\n\n  val = val.valueOf\n    ? val.valueOf()\n    : Object.prototype.valueOf.apply(val)\n\n  return typeof val;\n};\n","'use strict';\n\nvar bindInternal3 = require('../function/bindInternal3');\n\n/**\n * # For Each\n *\n * A fast `.forEach()` implementation.\n *\n * @param  {Array}    subject     The array (or array-like) to iterate over.\n * @param  {Function} fn          The visitor function.\n * @param  {Object}   thisContext The context for the visitor.\n */\nmodule.exports = function fastForEach (subject, fn, thisContext) {\n  var length = subject.length,\n      iterator = thisContext !== undefined ? bindInternal3(fn, thisContext) : fn,\n      i;\n  for (i = 0; i < length; i++) {\n    iterator(subject[i], i, subject);\n  }\n};\n","'use strict';\n\nvar bindInternal4 = require('../function/bindInternal4');\n\n/**\n * # Reduce\n *\n * A fast `.reduce()` implementation.\n *\n * @param  {Array}    subject      The array (or array-like) to reduce.\n * @param  {Function} fn           The reducer function.\n * @param  {mixed}    initialValue The initial value for the reducer, defaults to subject[0].\n * @param  {Object}   thisContext  The context for the reducer.\n * @return {mixed}                 The final result.\n */\nmodule.exports = function fastReduce (subject, fn, initialValue, thisContext) {\n  var length = subject.length,\n      iterator = thisContext !== undefined ? bindInternal4(fn, thisContext) : fn,\n      i, result;\n\n  if (initialValue === undefined) {\n    i = 1;\n    result = subject[0];\n  }\n  else {\n    i = 0;\n    result = initialValue;\n  }\n\n  for (; i < length; i++) {\n    result = iterator(result, subject[i], i, subject);\n  }\n\n  return result;\n};\n","'use strict';\n\nvar forEachArray = require('./array/forEach'),\n    forEachObject = require('./object/forEach');\n\n/**\n * # ForEach\n *\n * A fast `.forEach()` implementation.\n *\n * @param  {Array|Object} subject     The array or object to iterate over.\n * @param  {Function}     fn          The visitor function.\n * @param  {Object}       thisContext The context for the visitor.\n */\nmodule.exports = function fastForEach (subject, fn, thisContext) {\n  if (subject instanceof Array) {\n    return forEachArray(subject, fn, thisContext);\n  }\n  else {\n    return forEachObject(subject, fn, thisContext);\n  }\n};","'use strict';\n\n/**\n * Internal helper to bind a function known to have 3 arguments\n * to a given context.\n */\nmodule.exports = function bindInternal3 (func, thisContext) {\n  return function (a, b, c) {\n    return func.call(thisContext, a, b, c);\n  };\n};\n","'use strict';\n\n/**\n * Internal helper to bind a function known to have 4 arguments\n * to a given context.\n */\nmodule.exports = function bindInternal4 (func, thisContext) {\n  return function (a, b, c, d) {\n    return func.call(thisContext, a, b, c, d);\n  };\n};\n","'use strict';\n\n/**\n * Analogue of Object.assign().\n * Copies properties from one or more source objects to\n * a target object. Existing keys on the target object will be overwritten.\n *\n * > Note: This differs from spec in some important ways:\n * > 1. Will throw if passed non-objects, including `undefined` or `null` values.\n * > 2. Does not support the curious Exception handling behavior, exceptions are thrown immediately.\n * > For more details, see:\n * > https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n *\n *\n *\n * @param  {Object} target      The target object to copy properties to.\n * @param  {Object} source, ... The source(s) to copy properties from.\n * @return {Object}             The updated target object.\n */\nmodule.exports = function fastAssign (target) {\n  var totalArgs = arguments.length,\n      source, i, totalKeys, keys, key, j;\n\n  for (i = 1; i < totalArgs; i++) {\n    source = arguments[i];\n    keys = Object.keys(source);\n    totalKeys = keys.length;\n    for (j = 0; j < totalKeys; j++) {\n      key = keys[j];\n      target[key] = source[key];\n    }\n  }\n  return target;\n};\n","'use strict';\n\nvar bindInternal3 = require('../function/bindInternal3');\n\n/**\n * # For Each\n *\n * A fast object `.forEach()` implementation.\n *\n * @param  {Object}   subject     The object to iterate over.\n * @param  {Function} fn          The visitor function.\n * @param  {Object}   thisContext The context for the visitor.\n */\nmodule.exports = function fastForEachObject (subject, fn, thisContext) {\n  var keys = Object.keys(subject),\n      length = keys.length,\n      iterator = thisContext !== undefined ? bindInternal3(fn, thisContext) : fn,\n      key, i;\n  for (i = 0; i < length; i++) {\n    key = keys[i];\n    iterator(subject[key], key, subject);\n  }\n};\n","'use strict';\n\nvar bindInternal4 = require('../function/bindInternal4');\n\n/**\n * # Reduce\n *\n * A fast object `.reduce()` implementation.\n *\n * @param  {Object}   subject      The object to reduce over.\n * @param  {Function} fn           The reducer function.\n * @param  {mixed}    initialValue The initial value for the reducer, defaults to subject[0].\n * @param  {Object}   thisContext  The context for the reducer.\n * @return {mixed}                 The final result.\n */\nmodule.exports = function fastReduceObject (subject, fn, initialValue, thisContext) {\n  var keys = Object.keys(subject),\n      length = keys.length,\n      iterator = thisContext !== undefined ? bindInternal4(fn, thisContext) : fn,\n      i, key, result;\n\n  if (initialValue === undefined) {\n    i = 1;\n    result = subject[keys[0]];\n  }\n  else {\n    i = 0;\n    result = initialValue;\n  }\n\n  for (; i < length; i++) {\n    key = keys[i];\n    result = iterator(result, subject[key], key, subject);\n  }\n\n  return result;\n};\n","'use strict';\n\nvar reduceArray = require('./array/reduce'),\n    reduceObject = require('./object/reduce');\n\n/**\n * # Reduce\n *\n * A fast `.reduce()` implementation.\n *\n * @param  {Array|Object} subject      The array or object to reduce over.\n * @param  {Function}     fn           The reducer function.\n * @param  {mixed}        initialValue The initial value for the reducer, defaults to subject[0].\n * @param  {Object}       thisContext  The context for the reducer.\n * @return {Array|Object}              The array or object containing the results.\n */\nmodule.exports = function fastReduce (subject, fn, initialValue, thisContext) {\n  if (subject instanceof Array) {\n    return reduceArray(subject, fn, initialValue, thisContext);\n  }\n  else {\n    return reduceObject(subject, fn, initialValue, thisContext);\n  }\n};","/** generate unique id for selector */\r\nvar counter = Date.now() % 1e9;\r\n\r\nmodule.exports = function getUid(){\r\n\treturn (Math.random() * 1e9 >>> 0) + (counter++);\r\n};","/*global window*/\n\n/**\n * Check if object is dom node.\n *\n * @param {Object} val\n * @return {Boolean}\n * @api public\n */\n\nmodule.exports = function isNode(val){\n  if (!val || typeof val !== 'object') return false;\n  if (window && 'object' == typeof window.Node) return val instanceof window.Node;\n  return 'number' == typeof val.nodeType && 'string' == typeof val.nodeName;\n}\n","/**\n * Supported SVG attributes\n */\n\nexports.attributes = {\n  'cx': true,\n  'cy': true,\n  'd': true,\n  'dx': true,\n  'dy': true,\n  'fill': true,\n  'fillOpacity': true,\n  'fontFamily': true,\n  'fontSize': true,\n  'fx': true,\n  'fy': true,\n  'gradientTransform': true,\n  'gradientUnits': true,\n  'markerEnd': true,\n  'markerMid': true,\n  'markerStart': true,\n  'offset': true,\n  'opacity': true,\n  'patternContentUnits': true,\n  'patternUnits': true,\n  'points': true,\n  'preserveAspectRatio': true,\n  'r': true,\n  'rx': true,\n  'ry': true,\n  'spreadMethod': true,\n  'stopColor': true,\n  'stopOpacity': true,\n  'stroke': true,\n  'strokeDasharray': true,\n  'strokeLinecap': true,\n  'strokeOpacity': true,\n  'strokeWidth': true,\n  'textAnchor': true,\n  'transform': true,\n  'version': true,\n  'viewBox': true,\n  'x1': true,\n  'x2': true,\n  'x': true,\n  'y1': true,\n  'y2': true,\n  'y': true\n}\n\n/**\n * Are element's attributes SVG?\n *\n * @param {String} attr\n */\n\nmodule.exports = function (attr) {\n  return attr in exports.attributes\n}\n","/**\n * Supported SVG elements\n *\n * @type {Array}\n */\n\nexports.elements = {\n  'animate': true,\n  'circle': true,\n  'defs': true,\n  'ellipse': true,\n  'g': true,\n  'line': true,\n  'linearGradient': true,\n  'mask': true,\n  'path': true,\n  'pattern': true,\n  'polygon': true,\n  'polyline': true,\n  'radialGradient': true,\n  'rect': true,\n  'stop': true,\n  'svg': true,\n  'text': true,\n  'tspan': true\n}\n\n/**\n * Is element's namespace SVG?\n *\n * @param {String} name\n */\n\nexports.isElement = function (name) {\n  return name in exports.elements\n}\n","'use strict'\n\nmodule.exports = function(target) {\n  target = target || {}\n\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i]\n    if (!source) continue\n\n    Object.getOwnPropertyNames(source).forEach(function(key) {\n      if (undefined === target[key])\n        target[key] = source[key]\n    })\n  }\n\n  return target\n}\n","(function (root, factory){\n  'use strict';\n\n  /*istanbul ignore next:cant test*/\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = factory();\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else {\n    // Browser globals\n    root.objectPath = factory();\n  }\n})(this, function(){\n  'use strict';\n\n  var\n    toStr = Object.prototype.toString,\n    _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  function isEmpty(value){\n    if (!value) {\n      return true;\n    }\n    if (isArray(value) && value.length === 0) {\n        return true;\n    } else if (!isString(value)) {\n        for (var i in value) {\n            if (_hasOwnProperty.call(value, i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n  }\n\n  function toString(type){\n    return toStr.call(type);\n  }\n\n  function isNumber(value){\n    return typeof value === 'number' || toString(value) === \"[object Number]\";\n  }\n\n  function isString(obj){\n    return typeof obj === 'string' || toString(obj) === \"[object String]\";\n  }\n\n  function isObject(obj){\n    return typeof obj === 'object' && toString(obj) === \"[object Object]\";\n  }\n\n  function isArray(obj){\n    return typeof obj === 'object' && typeof obj.length === 'number' && toString(obj) === '[object Array]';\n  }\n\n  function isBoolean(obj){\n    return typeof obj === 'boolean' || toString(obj) === '[object Boolean]';\n  }\n\n  function getKey(key){\n    var intKey = parseInt(key);\n    if (intKey.toString() === key) {\n      return intKey;\n    }\n    return key;\n  }\n\n  function set(obj, path, value, doNotReplace){\n    if (isNumber(path)) {\n      path = [path];\n    }\n    if (isEmpty(path)) {\n      return obj;\n    }\n    if (isString(path)) {\n      return set(obj, path.split('.').map(getKey), value, doNotReplace);\n    }\n    var currentPath = path[0];\n\n    if (path.length === 1) {\n      var oldVal = obj[currentPath];\n      if (oldVal === void 0 || !doNotReplace) {\n        obj[currentPath] = value;\n      }\n      return oldVal;\n    }\n\n    if (obj[currentPath] === void 0) {\n      //check if we assume an array\n      if(isNumber(path[1])) {\n        obj[currentPath] = [];\n      } else {\n        obj[currentPath] = {};\n      }\n    }\n\n    return set(obj[currentPath], path.slice(1), value, doNotReplace);\n  }\n\n  function del(obj, path) {\n    if (isNumber(path)) {\n      path = [path];\n    }\n\n    if (isEmpty(obj)) {\n      return void 0;\n    }\n\n    if (isEmpty(path)) {\n      return obj;\n    }\n    if(isString(path)) {\n      return del(obj, path.split('.'));\n    }\n\n    var currentPath = getKey(path[0]);\n    var oldVal = obj[currentPath];\n\n    if(path.length === 1) {\n      if (oldVal !== void 0) {\n        if (isArray(obj)) {\n          obj.splice(currentPath, 1);\n        } else {\n          delete obj[currentPath];\n        }\n      }\n    } else {\n      if (obj[currentPath] !== void 0) {\n        return del(obj[currentPath], path.slice(1));\n      }\n    }\n\n    return obj;\n  }\n\n  var objectPath = function(obj) {\n    return Object.keys(objectPath).reduce(function(proxy, prop) {\n      if (typeof objectPath[prop] === 'function') {\n        proxy[prop] = objectPath[prop].bind(objectPath, obj);\n      }\n\n      return proxy;\n    }, {});\n  };\n\n  objectPath.has = function (obj, path) {\n    if (isEmpty(obj)) {\n      return false;\n    }\n\n    if (isNumber(path)) {\n      path = [path];\n    } else if (isString(path)) {\n      path = path.split('.');\n    }\n\n    if (isEmpty(path) || path.length === 0) {\n      return false;\n    }\n\n    for (var i = 0; i < path.length; i++) {\n      var j = path[i];\n      if ((isObject(obj) || isArray(obj)) && _hasOwnProperty.call(obj, j)) {\n        obj = obj[j];\n      } else {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  objectPath.ensureExists = function (obj, path, value){\n    return set(obj, path, value, true);\n  };\n\n  objectPath.set = function (obj, path, value, doNotReplace){\n    return set(obj, path, value, doNotReplace);\n  };\n\n  objectPath.insert = function (obj, path, value, at){\n    var arr = objectPath.get(obj, path);\n    at = ~~at;\n    if (!isArray(arr)) {\n      arr = [];\n      objectPath.set(obj, path, arr);\n    }\n    arr.splice(at, 0, value);\n  };\n\n  objectPath.empty = function(obj, path) {\n    if (isEmpty(path)) {\n      return obj;\n    }\n    if (isEmpty(obj)) {\n      return void 0;\n    }\n\n    var value, i;\n    if (!(value = objectPath.get(obj, path))) {\n      return obj;\n    }\n\n    if (isString(value)) {\n      return objectPath.set(obj, path, '');\n    } else if (isBoolean(value)) {\n      return objectPath.set(obj, path, false);\n    } else if (isNumber(value)) {\n      return objectPath.set(obj, path, 0);\n    } else if (isArray(value)) {\n      value.length = 0;\n    } else if (isObject(value)) {\n      for (i in value) {\n        if (_hasOwnProperty.call(value, i)) {\n          delete value[i];\n        }\n      }\n    } else {\n      return objectPath.set(obj, path, null);\n    }\n  };\n\n  objectPath.push = function (obj, path /*, values */){\n    var arr = objectPath.get(obj, path);\n    if (!isArray(arr)) {\n      arr = [];\n      objectPath.set(obj, path, arr);\n    }\n\n    arr.push.apply(arr, Array.prototype.slice.call(arguments, 2));\n  };\n\n  objectPath.coalesce = function (obj, paths, defaultValue) {\n    var value;\n\n    for (var i = 0, len = paths.length; i < len; i++) {\n      if ((value = objectPath.get(obj, paths[i])) !== void 0) {\n        return value;\n      }\n    }\n\n    return defaultValue;\n  };\n\n  objectPath.get = function (obj, path, defaultValue){\n    if (isNumber(path)) {\n      path = [path];\n    }\n    if (isEmpty(path)) {\n      return obj;\n    }\n    if (isEmpty(obj)) {\n      return defaultValue;\n    }\n    if (isString(path)) {\n      return objectPath.get(obj, path.split('.'), defaultValue);\n    }\n\n    var currentPath = getKey(path[0]);\n\n    if (path.length === 1) {\n      if (obj[currentPath] === void 0) {\n        return defaultValue;\n      }\n      return obj[currentPath];\n    }\n\n    return objectPath.get(obj[currentPath], path.slice(1), defaultValue);\n  };\n\n  objectPath.del = function(obj, path) {\n    return del(obj, path);\n  };\n\n  return objectPath;\n});\n","/**\n * Module dependencies.\n */\n\nvar slice = require('sliced')\nvar flatten = require('array-flatten')\n\n/**\n * This function lets us create virtual nodes using a simple\n * syntax. It is compatible with JSX transforms so you can use\n * JSX to write nodes that will compile to this function.\n *\n * let node = element('div', { id: 'foo' }, [\n *   element('a', { href: 'http://google.com' }, 'Google')\n * ])\n *\n * You can leave out the attributes or the children if either\n * of them aren't needed and it will figure out what you're\n * trying to do.\n */\n\nmodule.exports = element\n\n/**\n * Create virtual trees of components.\n *\n * This creates the nicer API for the user.\n * It translates that friendly API into an actual tree of nodes.\n *\n * @param {*} type\n * @param {Object} attributes\n * @param {Array} children\n * @return {Object}\n * @api public\n */\n\nfunction element (type, attributes, children) {\n  // Default to div with no args\n  if (!type) {\n    throw new TypeError('element() needs a type.')\n  }\n\n  // Skipped adding attributes and we're passing\n  // in children instead.\n  if (arguments.length === 2 && (typeof attributes === 'string' || Array.isArray(attributes))) {\n    children = attributes\n    attributes = {}\n  }\n\n  // Account for JSX putting the children as multiple arguments.\n  // This is essentially just the ES6 rest param\n  if (arguments.length > 2 && Array.isArray(arguments[2]) === false) {\n    children = slice(arguments, 2)\n  }\n\n  children = children || []\n  attributes = attributes || {}\n\n  // passing in a single child, you can skip\n  // using the array\n  if (!Array.isArray(children)) {\n    children = [children]\n  }\n\n  // Flatten nested child arrays. This is how JSX compiles some nodes.\n  children = flatten(children, 2)\n\n  // if you pass in a function, it's a `Component` constructor.\n  // otherwise it's an element.\n  return {\n    type: type,\n    children: children,\n    attributes: attributes\n  }\n}\n","'use strict'\n\n/**\n * Expose `arrayFlatten`.\n */\nmodule.exports = arrayFlatten\n\n/**\n * Recursive flatten function with depth.\n *\n * @param  {Array}  array\n * @param  {Array}  result\n * @param  {Number} depth\n * @return {Array}\n */\nfunction flattenWithDepth (array, result, depth) {\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i]\n\n    if (depth > 0 && Array.isArray(value)) {\n      flattenWithDepth(value, result, depth - 1)\n    } else {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Recursive flatten function. Omitting depth is slightly faster.\n *\n * @param  {Array} array\n * @param  {Array} result\n * @return {Array}\n */\nfunction flattenForever (array, result) {\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i]\n\n    if (Array.isArray(value)) {\n      flattenForever(value, result)\n    } else {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Flatten an array, with the ability to define a depth.\n *\n * @param  {Array}  array\n * @param  {Number} depth\n * @return {Array}\n */\nfunction arrayFlatten (array, depth) {\n  if (depth == null) {\n    return flattenForever(array, [])\n  }\n\n  return flattenWithDepth(array, [], depth)\n}\n","module.exports = exports = require('./lib/sliced');\n","\n/**\n * An Array.prototype.slice.call(arguments) alternative\n *\n * @param {Object} args something with a length\n * @param {Number} slice\n * @param {Number} sliceEnd\n * @api public\n */\n\nmodule.exports = function (args, slice, sliceEnd) {\n  var ret = [];\n  var len = args.length;\n\n  if (0 === len) return ret;\n\n  var start = slice < 0\n    ? Math.max(0, slice + len)\n    : slice || 0;\n\n  if (sliceEnd !== undefined) {\n    len = sliceEnd < 0\n      ? sliceEnd + len\n      : sliceEnd\n  }\n\n  while (len-- > start) {\n    ret[len - start] = args[len];\n  }\n\n  return ret;\n}\n\n","/** @jsx element */\r\n\r\nimport {Socket, LongPoller} from \"../vendor/phoenix.js\";\r\nimport element from 'virtual-element';\r\nimport {render, tree} from 'deku';\r\nimport Messages from './messages';\r\n\r\nconst chatMessages = [];\r\n\r\nconst app = tree(<Messages messages={[]} />);\r\napp.set('messages', chatMessages);\r\n\r\nconsole.log(app);\r\n\r\nrender(app, document.querySelector('#messages'));\r\n\r\nlet socket = new Socket(\"/socket\", {\r\n\tlogger: ((kind, msg, data) => { console.log(`${kind}: ${msg}`, data) })\r\n})\r\n\r\nsocket.connect({user_id: \"123\"})\r\nvar $status    = document.querySelector(\"#status\")\r\nvar $input     = document.querySelector(\"#message-input\")\r\nvar $username  = document.querySelector(\"#username\")\r\n\r\nsocket.onOpen( ev => console.log(\"OPEN\", ev) )\r\nsocket.onError( ev => console.log(\"ERROR\", ev) )\r\nsocket.onClose( e => console.log(\"CLOSE\", e))\r\n\r\nvar chan = socket.channel(\"rooms:lobby\", {})\r\nchan.join().receive(\"ignore\", () => console.log(\"auth error\"))\r\n\t\t\t\t\t .receive(\"ok\", () => console.log(\"join ok\"))\r\n\t\t\t\t\t .after(10000, () => console.log(\"Connection interruption\"))\r\nchan.onError(e => console.log(\"something went wrong\", e))\r\nchan.onClose(e => console.log(\"channel closed\", e))\r\n\r\n$input.removeEventListener(\"keypress\");\r\n$input.addEventListener(\"keypress\", e => {\r\n\tif (e.keyCode == 13) {\r\n\t\tchan.push(\"new:msg\", {user: $username.value, body: $input.value})\r\n\t\t$input.value = '';\r\n\t}\r\n})\r\n\r\nchan.on(\"new:msg\", msg => {\r\n\tchatMessages.push(msg);\r\n\tapp.set('messages', chatMessages);\r\n})\r\n\r\nchan.on(\"user:entered\", msg => {\r\n\tmsg.user = msg.user || \"anonymous\";\r\n\tchatMessages.push(msg);\r\n\tapp.set('messages', chatMessages);\r\n})\r\n","/** @jsx element */\r\nimport element from 'virtual-element';\r\n\r\nconst Component = {\r\n\tpropTypes: {\r\n\t\tmessages: {\r\n\t\t\tsource: 'messages'\r\n\t\t}\r\n\t},\r\n\r\n\trender({props}) {\r\n\t\tconst {messages, mountEle} = props;\r\n\t\tconst messageElements = messages.map((message) => {\r\n\t\t\treturn (<p>[<a href=\"#\">@{message.user}</a>]: {message.body}</p>);\r\n\t\t});\r\n\r\n\t\treturn <div style=\"overflow: auto; height: 100%;\">{messageElements}</div>;\r\n\t},\r\n\r\n\tafterRender (component, el) {\r\n\t\tel.scrollTop = el.scrollHeight;\r\n\t}\r\n};\r\n\r\nexport default Component;","// Phoenix Channels JavaScript client\r\n//\r\n// ## Socket Connection\r\n//\r\n// A single connection is established to the server and\r\n// channels are mulitplexed over the connection.\r\n// Connect to the server using the `Socket` class:\r\n//\r\n//     let socket = new Socket(\"/ws\")\r\n//     socket.connect({userToken: \"123\"})\r\n//\r\n// The `Socket` constructor takes the mount point of the socket\r\n// as well as options that can be found in the Socket docs,\r\n// such as configuring the `LongPoll` transport, and heartbeat.\r\n// Socket params can also be passed as an object literal to `connect`.\r\n//\r\n// ## Channels\r\n//\r\n// Channels are isolated, concurrent processes on the server that\r\n// subscribe to topics and broker events between the client and server.\r\n// To join a channel, you must provide the topic, and channel params for\r\n// authorization. Here's an example chat room example where `\"new_msg\"`\r\n// events are listened for, messages are pushed to the server, and\r\n// the channel is joined with ok/error matches, and `after` hook:\r\n//\r\n//     let channel = socket.channel(\"rooms:123\", {token: roomToken})\r\n//     channel.on(\"new_msg\", msg => console.log(\"Got message\", msg) )\r\n//     $input.onEnter( e => {\r\n//       channel.push(\"new_msg\", {body: e.target.val})\r\n//        .receive(\"ok\", (msg) => console.log(\"created message\", msg) )\r\n//        .receive(\"error\", (reasons) => console.log(\"create failed\", reasons) )\r\n//        .after(10000, () => console.log(\"Networking issue. Still waiting...\") )\r\n//     })\r\n//     channel.join()\r\n//       .receive(\"ok\", ({messages}) => console.log(\"catching up\", messages) )\r\n//       .receive(\"error\", ({reason}) => console.log(\"failed join\", reason) )\r\n//       .after(10000, () => console.log(\"Networking issue. Still waiting...\") )\r\n//\r\n//\r\n// ## Joining\r\n//\r\n// Joining a channel with `channel.join(topic, params)`, binds the params to\r\n// `channel.params`. Subsequent rejoins will send up the modified params for\r\n// updating authorization params, or passing up last_message_id information.\r\n// Successful joins receive an \"ok\" status, while unsuccessful joins\r\n// receive \"error\".\r\n//\r\n//\r\n// ## Pushing Messages\r\n//\r\n// From the previous example, we can see that pushing messages to the server\r\n// can be done with `channel.push(eventName, payload)` and we can optionally\r\n// receive responses from the push. Additionally, we can use\r\n// `after(millsec, callback)` to abort waiting for our `receive` hooks and\r\n// take action after some period of waiting.\r\n//\r\n//\r\n// ## Socket Hooks\r\n//\r\n// Lifecycle events of the multiplexed connection can be hooked into via\r\n// `socket.onError()` and `socket.onClose()` events, ie:\r\n//\r\n//     socket.onError( () => console.log(\"there was an error with the connection!\") )\r\n//     socket.onClose( () => console.log(\"the connection dropped\") )\r\n//\r\n//\r\n// ## Channel Hooks\r\n//\r\n// For each joined channel, you can bind to `onError` and `onClose` events\r\n// to monitor the channel lifecycle, ie:\r\n//\r\n//     channel.onError( () => console.log(\"there was an error!\") )\r\n//     channel.onClose( () => console.log(\"the channel has gone away gracefully\") )\r\n//\r\n// ### onError hooks\r\n//\r\n// `onError` hooks are invoked if the socket connection drops, or the channel\r\n// crashes on the server. In either case, a channel rejoin is attemtped\r\n// automatically in an exponential backoff manner.\r\n//\r\n// ### onClose hooks\r\n//\r\n// `onClose` hooks are invoked only in two cases. 1) the channel explicitly\r\n// closed on the server, or 2). The client explicitly closed, by calling\r\n// `channel.leave()`\r\n//\r\n\r\nconst SOCKET_STATES = {connecting: 0, open: 1, closing: 2, closed: 3}\r\nconst CHANNEL_STATES = {\r\n  closed: \"closed\",\r\n  errored: \"errored\",\r\n  joined: \"joined\",\r\n  joining: \"joining\",\r\n}\r\nconst CHANNEL_EVENTS = {\r\n  close: \"phx_close\",\r\n  error: \"phx_error\",\r\n  join: \"phx_join\",\r\n  reply: \"phx_reply\",\r\n  leave: \"phx_leave\"\r\n}\r\nconst TRANSPORTS = {\r\n  longpoll: \"longpoll\",\r\n  websocket: \"websocket\"\r\n}\r\n\r\nclass Push {\r\n\r\n  // Initializes the Push\r\n  //\r\n  // channel - The Channelnel\r\n  // event - The event, for example `\"phx_join\"`\r\n  // payload - The payload, for example `{user_id: 123}`\r\n  //\r\n  constructor(channel, event, payload){\r\n    this.channel      = channel\r\n    this.event        = event\r\n    this.payload      = payload || {}\r\n    this.receivedResp = null\r\n    this.afterHook    = null\r\n    this.recHooks     = []\r\n    this.sent         = false\r\n  }\r\n\r\n  send(){\r\n    const ref         = this.channel.socket.makeRef()\r\n    this.refEvent     = this.channel.replyEventName(ref)\r\n    this.receivedResp = null\r\n    this.sent         = false\r\n\r\n    this.channel.on(this.refEvent, payload => {\r\n      this.receivedResp = payload\r\n      this.matchReceive(payload)\r\n      this.cancelRefEvent()\r\n      this.cancelAfter()\r\n    })\r\n\r\n    this.startAfter()\r\n    this.sent = true\r\n    this.channel.socket.push({\r\n      topic: this.channel.topic,\r\n      event: this.event,\r\n      payload: this.payload,\r\n      ref: ref\r\n    })\r\n  }\r\n\r\n  receive(status, callback){\r\n    if(this.receivedResp && this.receivedResp.status === status){\r\n      callback(this.receivedResp.response)\r\n    }\r\n\r\n    this.recHooks.push({status, callback})\r\n    return this\r\n  }\r\n\r\n  after(ms, callback){\r\n    if(this.afterHook){ throw(`only a single after hook can be applied to a push`) }\r\n    let timer = null\r\n    if(this.sent){ timer = setTimeout(callback, ms) }\r\n    this.afterHook = {ms: ms, callback: callback, timer: timer}\r\n    return this\r\n  }\r\n\r\n\r\n  // private\r\n\r\n  matchReceive({status, response, ref}){\r\n    this.recHooks.filter( h => h.status === status )\r\n                 .forEach( h => h.callback(response) )\r\n  }\r\n\r\n  cancelRefEvent(){ this.channel.off(this.refEvent) }\r\n\r\n  cancelAfter(){ if(!this.afterHook){ return }\r\n    clearTimeout(this.afterHook.timer)\r\n    this.afterHook.timer = null\r\n  }\r\n\r\n  startAfter(){ if(!this.afterHook){ return }\r\n    let callback = () => {\r\n      this.cancelRefEvent()\r\n      this.afterHook.callback()\r\n    }\r\n    this.afterHook.timer = setTimeout(callback, this.afterHook.ms)\r\n  }\r\n}\r\n\r\nexport class Channel {\r\n  constructor(topic, params, socket) {\r\n    this.state       = CHANNEL_STATES.closed\r\n    this.topic       = topic\r\n    this.params      = params || {}\r\n    this.socket      = socket\r\n    this.bindings    = []\r\n    this.joinedOnce  = false\r\n    this.joinPush    = new Push(this, CHANNEL_EVENTS.join, this.params)\r\n    this.pushBuffer  = []\r\n    this.rejoinTimer  = new Timer(\r\n      () => this.rejoinUntilConnected(),\r\n      this.socket.reconnectAfterMs\r\n    )\r\n    this.joinPush.receive(\"ok\", () => {\r\n      this.state = CHANNEL_STATES.joined\r\n      this.rejoinTimer.reset()\r\n    })\r\n    this.onClose( () => {\r\n      this.socket.log(\"channel\", `close ${this.topic}`)\r\n      this.state = CHANNEL_STATES.closed\r\n      this.socket.remove(this)\r\n    })\r\n    this.onError( reason => {\r\n      this.socket.log(\"channel\", `error ${this.topic}`, reason)\r\n      this.state = CHANNEL_STATES.errored\r\n      this.rejoinTimer.setTimeout()\r\n    })\r\n    this.on(CHANNEL_EVENTS.reply, (payload, ref) => {\r\n      this.trigger(this.replyEventName(ref), payload)\r\n    })\r\n  }\r\n\r\n  rejoinUntilConnected(){\r\n    this.rejoinTimer.setTimeout()\r\n    if(this.socket.isConnected()){\r\n      this.rejoin()\r\n    }\r\n  }\r\n\r\n  join(){\r\n    if(this.joinedOnce){\r\n      throw(`tried to join multiple times. 'join' can only be called a single time per channel instance`)\r\n    } else {\r\n      this.joinedOnce = true\r\n    }\r\n    this.sendJoin()\r\n    return this.joinPush\r\n  }\r\n\r\n  onClose(callback){ this.on(CHANNEL_EVENTS.close, callback) }\r\n\r\n  onError(callback){\r\n    this.on(CHANNEL_EVENTS.error, reason => callback(reason) )\r\n  }\r\n\r\n  on(event, callback){ this.bindings.push({event, callback}) }\r\n\r\n  off(event){ this.bindings = this.bindings.filter( bind => bind.event !== event ) }\r\n\r\n  canPush(){ return this.socket.isConnected() && this.state === CHANNEL_STATES.joined }\r\n\r\n  push(event, payload){\r\n    if(!this.joinedOnce){\r\n      throw(`tried to push '${event}' to '${this.topic}' before joining. Use channel.join() before pushing events`)\r\n    }\r\n    let pushEvent = new Push(this, event, payload)\r\n    if(this.canPush()){\r\n      pushEvent.send()\r\n    } else {\r\n      this.pushBuffer.push(pushEvent)\r\n    }\r\n\r\n    return pushEvent\r\n  }\r\n\r\n  // Leaves the channel\r\n  //\r\n  // Unsubscribes from server events, and\r\n  // instructs channel to terminate on server\r\n  //\r\n  // Triggers onClose() hooks\r\n  //\r\n  // To receive leave acknowledgements, use the a `receive`\r\n  // hook to bind to the server ack, ie:\r\n  //\r\n  //     channel.leave().receive(\"ok\", () => alert(\"left!\") )\r\n  //\r\n  leave(){\r\n    return this.push(CHANNEL_EVENTS.leave).receive(\"ok\", () => {\r\n      this.socket.log(\"channel\", `leave ${this.topic}`)\r\n      this.trigger(CHANNEL_EVENTS.close, \"leave\")\r\n    })\r\n  }\r\n\r\n  // Overridable message hook\r\n  //\r\n  // Receives all events for specialized message handling\r\n  onMessage(event, payload, ref){}\r\n\r\n  // private\r\n\r\n  isMember(topic){ return this.topic === topic }\r\n\r\n  sendJoin(){\r\n    this.state = CHANNEL_STATES.joining\r\n    this.joinPush.send()\r\n  }\r\n\r\n  rejoin(){\r\n    this.sendJoin()\r\n    this.pushBuffer.forEach( pushEvent => pushEvent.send() )\r\n    this.pushBuffer = []\r\n  }\r\n\r\n  trigger(triggerEvent, payload, ref){\r\n    this.onMessage(triggerEvent, payload, ref)\r\n    this.bindings.filter( bind => bind.event === triggerEvent )\r\n                 .map( bind => bind.callback(payload, ref) )\r\n  }\r\n\r\n  replyEventName(ref){ return `chan_reply_${ref}` }\r\n}\r\n\r\nexport class Socket {\r\n\r\n  // Initializes the Socket\r\n  //\r\n  // endPoint - The string WebSocket endpoint, ie, \"ws://example.com/ws\",\r\n  //                                               \"wss://example.com\"\r\n  //                                               \"/ws\" (inherited host & protocol)\r\n  // opts - Optional configuration\r\n  //   transport - The Websocket Transport, for example WebSocket or Phoenix.LongPoll.\r\n  //               Defaults to WebSocket with automatic LongPoll fallback.\r\n  //   heartbeatIntervalMs - The millisec interval to send a heartbeat message\r\n  //   reconnectAfterMs - The optional function that returns the millsec\r\n  //                      reconnect interval. Defaults to stepped backoff of:\r\n  //\r\n  //     function(tries){\r\n  //       return [1000, 5000, 10000][tries - 1] || 10000\r\n  //     }\r\n  //\r\n  //   logger - The optional function for specialized logging, ie:\r\n  //     `logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\r\n  //\r\n  //   longpollerTimeout - The maximum timeout of a long poll AJAX request.\r\n  //                        Defaults to 20s (double the server long poll timer).\r\n  //\r\n  // For IE8 support use an ES5-shim (https://github.com/es-shims/es5-shim)\r\n  //\r\n  constructor(endPoint, opts = {}){\r\n    this.stateChangeCallbacks = {open: [], close: [], error: [], message: []}\r\n    this.channels             = []\r\n    this.sendBuffer           = []\r\n    this.ref                  = 0\r\n    this.transport            = opts.transport || window.WebSocket || LongPoll\r\n    this.heartbeatIntervalMs  = opts.heartbeatIntervalMs || 30000\r\n    this.reconnectAfterMs     = opts.reconnectAfterMs || function(tries){\r\n      return [1000, 5000, 10000][tries - 1] || 10000\r\n    }\r\n    this.logger               = opts.logger || function(){} // noop\r\n    this.longpollerTimeout    = opts.longpollerTimeout || 20000\r\n    this.params               = {}\r\n    this.reconnectTimer       = new Timer(() => this.connect(this.params), this.reconnectAfterMs)\r\n    this.endPoint             = `${endPoint}/${TRANSPORTS.websocket}`\r\n  }\r\n\r\n  protocol(){ return location.protocol.match(/^https/) ? \"wss\" : \"ws\" }\r\n\r\n  endPointURL(){\r\n    let uri = Ajax.appendParams(this.endPoint, this.params)\r\n    if(uri.charAt(0) !== \"/\"){ return uri }\r\n    if(uri.charAt(1) === \"/\"){ return `${this.protocol()}:${uri}` }\r\n\r\n    return `${this.protocol()}://${location.host}${uri}`\r\n  }\r\n\r\n  disconnect(callback, code, reason){\r\n    if(this.conn){\r\n      this.conn.onclose = function(){} // noop\r\n      if(code){ this.conn.close(code, reason || \"\") } else { this.conn.close() }\r\n      this.conn = null\r\n    }\r\n    callback && callback()\r\n  }\r\n\r\n  // params - The params to send when connecting, for example `{user_id: userToken}`\r\n  connect(params = {}){ this.params = params\r\n    this.disconnect(() => {\r\n      this.conn = new this.transport(this.endPointURL())\r\n      this.conn.timeout   = this.longpollerTimeout\r\n      this.conn.onopen    = () => this.onConnOpen()\r\n      this.conn.onerror   = error => this.onConnError(error)\r\n      this.conn.onmessage = event => this.onConnMessage(event)\r\n      this.conn.onclose   = event => this.onConnClose(event)\r\n    })\r\n  }\r\n\r\n  // Logs the message. Override `this.logger` for specialized logging. noops by default\r\n  log(kind, msg, data){ this.logger(kind, msg, data) }\r\n\r\n  // Registers callbacks for connection state change events\r\n  //\r\n  // Examples\r\n  //\r\n  //    socket.onError(function(error){ alert(\"An error occurred\") })\r\n  //\r\n  onOpen     (callback){ this.stateChangeCallbacks.open.push(callback) }\r\n  onClose    (callback){ this.stateChangeCallbacks.close.push(callback) }\r\n  onError    (callback){ this.stateChangeCallbacks.error.push(callback) }\r\n  onMessage  (callback){ this.stateChangeCallbacks.message.push(callback) }\r\n\r\n  onConnOpen(){\r\n    this.log(\"transport\", `connected to ${this.endPointURL()}`, this.transport.prototype)\r\n    this.flushSendBuffer()\r\n    this.reconnectTimer.reset()\r\n    if(!this.conn.skipHeartbeat){\r\n      clearInterval(this.heartbeatTimer)\r\n      this.heartbeatTimer = setInterval(() => this.sendHeartbeat(), this.heartbeatIntervalMs)\r\n    }\r\n    this.stateChangeCallbacks.open.forEach( callback => callback() )\r\n  }\r\n\r\n  onConnClose(event){\r\n    this.log(\"transport\", \"close\", event)\r\n    this.triggerChanError()\r\n    clearInterval(this.heartbeatTimer)\r\n    this.reconnectTimer.setTimeout()\r\n    this.stateChangeCallbacks.close.forEach( callback => callback(event) )\r\n  }\r\n\r\n  onConnError(error){\r\n    this.log(\"transport\", error)\r\n    this.triggerChanError()\r\n    this.stateChangeCallbacks.error.forEach( callback => callback(error) )\r\n  }\r\n\r\n  triggerChanError(){\r\n    this.channels.forEach( channel => channel.trigger(CHANNEL_EVENTS.error) )\r\n  }\r\n\r\n  connectionState(){\r\n    switch(this.conn && this.conn.readyState){\r\n      case SOCKET_STATES.connecting: return \"connecting\"\r\n      case SOCKET_STATES.open:       return \"open\"\r\n      case SOCKET_STATES.closing:    return \"closing\"\r\n      default:                       return \"closed\"\r\n    }\r\n  }\r\n\r\n  isConnected(){ return this.connectionState() === \"open\" }\r\n\r\n  remove(channel){\r\n    this.channels = this.channels.filter( c => !c.isMember(channel.topic) )\r\n  }\r\n\r\n  channel(topic, chanParams = {}){\r\n    let channel = new Channel(topic, chanParams, this)\r\n    this.channels.push(channel)\r\n    return channel\r\n  }\r\n\r\n  push(data){\r\n    let {topic, event, payload, ref} = data\r\n    let callback = () => this.conn.send(JSON.stringify(data))\r\n    this.log(\"push\", `${topic} ${event} (${ref})`, payload)\r\n    if(this.isConnected()){\r\n      callback()\r\n    }\r\n    else {\r\n      this.sendBuffer.push(callback)\r\n    }\r\n  }\r\n\r\n  // Return the next message ref, accounting for overflows\r\n  makeRef(){\r\n    let newRef = this.ref + 1\r\n    if(newRef === this.ref){ this.ref = 0 } else { this.ref = newRef }\r\n\r\n    return this.ref.toString()\r\n  }\r\n\r\n  sendHeartbeat(){\r\n    this.push({topic: \"phoenix\", event: \"heartbeat\", payload: {}, ref: this.makeRef()})\r\n  }\r\n\r\n  flushSendBuffer(){\r\n    if(this.isConnected() && this.sendBuffer.length > 0){\r\n      this.sendBuffer.forEach( callback => callback() )\r\n      this.sendBuffer = []\r\n    }\r\n  }\r\n\r\n  onConnMessage(rawMessage){\r\n    let msg = JSON.parse(rawMessage.data)\r\n    let {topic, event, payload, ref} = msg\r\n    this.log(\"receive\", `${payload.status || \"\"} ${topic} ${event} ${ref && \"(\" + ref + \")\" || \"\"}`, payload)\r\n    this.channels.filter( channel => channel.isMember(topic) )\r\n                 .forEach( channel => channel.trigger(event, payload, ref) )\r\n    this.stateChangeCallbacks.message.forEach( callback => callback(msg) )\r\n  }\r\n}\r\n\r\n\r\nexport class LongPoll {\r\n\r\n  constructor(endPoint){\r\n    this.endPoint        = null\r\n    this.token           = null\r\n    this.skipHeartbeat   = true\r\n    this.onopen          = function(){} // noop\r\n    this.onerror         = function(){} // noop\r\n    this.onmessage       = function(){} // noop\r\n    this.onclose         = function(){} // noop\r\n    this.pollEndpoint    = this.normalizeEndpoint(endPoint)\r\n    this.readyState      = SOCKET_STATES.connecting\r\n\r\n    this.poll()\r\n  }\r\n\r\n  normalizeEndpoint(endPoint){\r\n    return(endPoint\r\n      .replace(\"ws://\", \"http://\")\r\n      .replace(\"wss://\", \"https://\")\r\n      .replace(new RegExp(\"(.*)\\/\" + TRANSPORTS.websocket), \"$1/\" + TRANSPORTS.longpoll))\r\n  }\r\n\r\n  endpointURL(){\r\n    return Ajax.appendParams(this.pollEndpoint, {\r\n      token: this.token,\r\n      format: \"json\"\r\n    })\r\n  }\r\n\r\n  closeAndRetry(){\r\n    this.close()\r\n    this.readyState = SOCKET_STATES.connecting\r\n  }\r\n\r\n  ontimeout(){\r\n    this.onerror(\"timeout\")\r\n    this.closeAndRetry()\r\n  }\r\n\r\n  poll(){\r\n    if(!(this.readyState === SOCKET_STATES.open || this.readyState === SOCKET_STATES.connecting)){ return }\r\n\r\n    Ajax.request(\"GET\", this.endpointURL(), \"application/json\", null, this.timeout, this.ontimeout.bind(this), (resp) => {\r\n      if(resp){\r\n        var {status, token, messages} = resp\r\n        this.token = token\r\n      } else{\r\n        var status = 0\r\n      }\r\n\r\n      switch(status){\r\n        case 200:\r\n          messages.forEach( msg => this.onmessage({data: JSON.stringify(msg)}) )\r\n          this.poll()\r\n          break\r\n        case 204:\r\n          this.poll()\r\n          break\r\n        case 410:\r\n          this.readyState = SOCKET_STATES.open\r\n          this.onopen()\r\n          this.poll()\r\n          break\r\n        case 0:\r\n        case 500:\r\n          this.onerror()\r\n          this.closeAndRetry()\r\n          break\r\n        default: throw(`unhandled poll status ${status}`)\r\n      }\r\n    })\r\n  }\r\n\r\n  send(body){\r\n    Ajax.request(\"POST\", this.endpointURL(), \"application/json\", body, this.timeout, this.onerror.bind(this, \"timeout\"), (resp) => {\r\n      if(!resp || resp.status !== 200){\r\n        this.onerror(status)\r\n        this.closeAndRetry()\r\n      }\r\n    })\r\n  }\r\n\r\n  close(code, reason){\r\n    this.readyState = SOCKET_STATES.closed\r\n    this.onclose()\r\n  }\r\n}\r\n\r\n\r\nexport class Ajax {\r\n\r\n  static request(method, endPoint, accept, body, timeout, ontimeout, callback){\r\n    if(window.XDomainRequest){\r\n      let req = new XDomainRequest() // IE8, IE9\r\n      this.xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback)\r\n    } else {\r\n      let req = window.XMLHttpRequest ?\r\n                  new XMLHttpRequest() : // IE7+, Firefox, Chrome, Opera, Safari\r\n                  new ActiveXObject(\"Microsoft.XMLHTTP\") // IE6, IE5\r\n      this.xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback)\r\n    }\r\n  }\r\n\r\n  static xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback){\r\n    req.timeout = timeout\r\n    req.open(method, endPoint)\r\n    req.onload = () => {\r\n      let response = this.parseJSON(req.responseText)\r\n      callback && callback(response)\r\n    }\r\n    if(ontimeout){ req.ontimeout = ontimeout }\r\n\r\n    // Work around bug in IE9 that requires an attached onprogress handler\r\n    req.onprogress = () => {}\r\n\r\n    req.send(body)\r\n  }\r\n\r\n  static xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback){\r\n    req.timeout = timeout\r\n    req.open(method, endPoint, true)\r\n    req.setRequestHeader(\"Content-Type\", accept)\r\n    req.onerror = () => { callback && callback(null) }\r\n    req.onreadystatechange = () => {\r\n      if(req.readyState === this.states.complete && callback){\r\n        let response = this.parseJSON(req.responseText)\r\n        callback(response)\r\n      }\r\n    }\r\n    if(ontimeout){ req.ontimeout = ontimeout }\r\n\r\n    req.send(body)\r\n  }\r\n\r\n  static parseJSON(resp){\r\n    return (resp && resp !== \"\") ?\r\n             JSON.parse(resp) :\r\n             null\r\n  }\r\n\r\n  static serialize(obj, parentKey){\r\n    let queryStr = [];\r\n    for(var key in obj){ if(!obj.hasOwnProperty(key)){ continue }\r\n      let paramKey = parentKey ? `${parentKey}[${key}]` : key\r\n      let paramVal = obj[key]\r\n      if(typeof paramVal === \"object\"){\r\n        queryStr.push(this.serialize(paramVal, paramKey))\r\n      } else {\r\n        queryStr.push(encodeURIComponent(paramKey) + \"=\" + encodeURIComponent(paramVal))\r\n      }\r\n    }\r\n    return queryStr.join(\"&\")\r\n  }\r\n\r\n  static appendParams(url, params){\r\n    if(Object.keys(params).length === 0){ return url }\r\n\r\n    let prefix = url.match(/\\?/) ? \"&\" : \"?\"\r\n    return `${url}${prefix}${this.serialize(params)}`\r\n  }\r\n}\r\n\r\nAjax.states = {complete: 4}\r\n\r\n\r\n// Creates a timer that accepts a `timerCalc` function to perform\r\n// calculated timeout retries, such as exponential backoff.\r\n//\r\n// ## Examples\r\n//\r\n//    let reconnectTimer = new Timer(() => this.connect(), function(tries){\r\n//      return [1000, 5000, 10000][tries - 1] || 10000\r\n//    })\r\n//    reconnectTimer.setTimeout() // fires after 1000\r\n//    reconnectTimer.setTimeout() // fires after 5000\r\n//    reconnectTimer.reset()\r\n//    reconnectTimer.setTimeout() // fires after 1000\r\n//\r\nclass Timer {\r\n  constructor(callback, timerCalc){\r\n    this.callback  = callback\r\n    this.timerCalc = timerCalc\r\n    this.timer     = null\r\n    this.tries     = 0\r\n  }\r\n\r\n  reset(){\r\n    this.tries = 0\r\n    clearTimeout(this.timer)\r\n  }\r\n\r\n  // Cancels any previous setTimeout and schedules callback\r\n  setTimeout(){\r\n    clearTimeout(this.timer)\r\n\r\n    this.timer = setTimeout(() => {\r\n      this.tries = this.tries + 1\r\n      this.callback()\r\n    }, this.timerCalc(this.tries + 1))\r\n  }\r\n}"]}